{
    "project": {
        "name": "Wikitude SDK API Reference",
        "description": "The Wikitude SDK API Reference",
        "version": "4.0.2",
        "url": "http://architect.wikitude.com"
    },
    "files": {
        "../build/core/android_ios/architect_src.js": {
            "name": "../build/core/android_ios/architect_src.js",
            "modules": {
                "AR": 1
            },
            "classes": {
                "Trackable2DObject": 1,
                "ARchitectObject": 1,
                "ARObject": 1,
                "GeoObject": 1,
                "Drawable": 1,
                "Drawable2D": 1,
                "Label": 1,
                "Model": 1,
                "Circle": 1,
                "ImageDrawable": 1,
                "AnimatedImageDrawable": 1,
                "Location": 1,
                "GeoLocation": 1,
                "RelativeLocation": 1,
                "ActionArea": 1,
                "ActionRange": 1,
                "BoundingRectangle": 1,
                "ImageResource": 1,
                "Animation": 1,
                "ModelAnimation": 1,
                "PropertyAnimation": 1,
                "AnimationGroup": 1,
                "Sound": 1,
                "Style": 1,
                "CONST": 1,
                "context": 1,
                "logger": 1,
                "radar": 1,
                "VideoDrawable": 1,
                "HtmlDrawable": 1,
                "Tracker": 1
            },
            "fors": {
                "Trackable2DObject": 1,
                "ARObject": 1,
                "GeoObject": 1,
                "Drawable2D": 1,
                "Drawable": 1,
                "ActionRange": 1,
                "HtmlDrawable": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "AR": {
            "name": "AR",
            "submodules": {},
            "classes": {
                "Trackable2DObject": 1,
                "ARchitectObject": 1,
                "ARObject": 1,
                "GeoObject": 1,
                "Drawable": 1,
                "Drawable2D": 1,
                "Label": 1,
                "Model": 1,
                "Circle": 1,
                "ImageDrawable": 1,
                "AnimatedImageDrawable": 1,
                "Location": 1,
                "GeoLocation": 1,
                "RelativeLocation": 1,
                "ActionArea": 1,
                "ActionRange": 1,
                "BoundingRectangle": 1,
                "ImageResource": 1,
                "Animation": 1,
                "ModelAnimation": 1,
                "PropertyAnimation": 1,
                "AnimationGroup": 1,
                "Sound": 1,
                "Style": 1,
                "CONST": 1,
                "context": 1,
                "logger": 1,
                "radar": 1,
                "VideoDrawable": 1,
                "HtmlDrawable": 1,
                "Tracker": 1
            },
            "fors": {
                "Trackable2DObject": 1,
                "ARObject": 1,
                "GeoObject": 1,
                "Drawable2D": 1,
                "Drawable": 1,
                "ActionRange": 1,
                "HtmlDrawable": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7870,
            "description": "In this section, some general concepts are described, which apply to multiple\nclasses within the ARchitect library.<br/>\n\n<h2 class=\"paragraph\">Scaled Distance Units (SDUs)</h2>In AR\napplications, the term \"size of an object\" cannot be defined just in pixels\nor similar size measurements. Unlike in 2-dimensional applications, such as\nmaps, the size of an object inherently depends on the distance from the\nviewer to the object.<br/>\n\nImagine a virtual 2-dimensional logo which should be placed right on top of a\ncertain store location. In a map-based application, the size can easily be\ndefined by specifying the width and height of the logo in pixels. In AR\napplications, the logo should appear as big as the building itself, which is\ndependent on the distance in a natural way. Additionally for geobased usecases\nobjects should be readable even if far away. We use a distance based scaling\n(see below) to accomplish this.<br/>\n\nThe term \"pixels\" or physical units cannot be used in AR applications,\nas they are defined in a static way and do not allow the application to scale\nthe objects in the desired way. Thus, the Wikitude ARchitect introduces Scaled\nDistance Units (SDU). SDUs are defined not only in relation to the object's size\nitself, but also in relation to the distance from the viewer to the object\nitself.<br/>\n\nFor drawables attached to GeoObjects, 1 SDU is defined as the screen-size of\nan object which is exactly 1 meter high and located 10 meters away from the viewer. If a\ndrawable's width is defined as 5 SDU, it will exactly overlap an object which\nis 5 meters wide and is located in 10 meters distance.<br/> For drawables\nattached to Trackable2DObjects, SDUs are determined by the underlying\ntrackable's size. The drawables anchor point will be set to the center of the\nTrackable2DObject, and 1 SDU is defined to be the height of the image, as\ndescribed in the figure below:<br/> <img\nsrc=\"../assets/img/Trackable2DDrawables.jpg\"/> <br/><br/> A circle with\nradius set to 0.25 will be rendered accordingly:<br/> <img\nsrc=\"../assets/img/circleInTrackable.jpg\"/>\n\n<h2 class=\"paragraph\">Distance Based Scaling (DBS)</h2><br/> Another\nimportant concept of an AR application is \"Distance Based Scaling\". Think\nabout the logo again, which represents the store location of a certain brand.\nIf we are in 10 meters viewing distance, the logo will perfectly overlap the\nbuilding, assuming that we have set the drawable's width and height to the right\nSDUs. Now, we are moving away from the store location. Without the concept of\nDistance Based Scaling (DBS), the logo will quickly vanish from the screen, as it will be too small to\nsee - especially when the SDUs are not set to a high value. A similar\nsituation appears when we are moving towards the location - the logo will\nsoon appear very big and obstruct the entire screen.<br/>\n\nTo avoid situations like this, where drawables are only clearly visible in a\ncertain viewing distance, and are otherwise soon too big or too small to see\nrespectively, we introduce DBS.\nDBS ensures that drawables do not exceed certain limits of their original\nappearance.<br/>\n\nYou can define three values, minScalingDistance maxScalingDistance and scalingFactor.<br/> minScalingDistance\ndefines the viewing distance at which the drawables will not be\nscaled anymore. Let's assume a minScalingDistance setting of 10 meters.\nRegardless if the viewing distance is 10 meters or even\ncloser to the original location, the drawable will still have the same size\non the screen. This avoids drawables obstructing the entire screen.<br/>\nmaxScalingDistance defines the viewing distance beyond\nwhich the drawables will not be scaled anymore. Let's assume a maxScalingDistance setting of 200 meters.\nThe drawable will still appear in the same size on the screen, regardless if the distance to the\nobject is 200 meters, or even more. This avoids drawables getting too\nsmall to be seen on the screen.<br/>\nThe scalingFactor controls the size the object takes on at maxScalingDistance, in percentage of the size\nit took on at minScalingDistance. If set to 0.2, on maxScalingDistance, the object will take on 20% of its\nscreen-size size at minScalingDistance. In between minScalingDistance and maxScalingDistance, the scaling\nwill be linear.<br/>\nminScalingDistance, maxScalingDistance and scalingFactor can be set in AR.context.scene."
        }
    },
    "classes": {
        "Trackable2DObject": {
            "name": "Trackable2DObject",
            "shortname": "Trackable2DObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8088,
            "extends": "ARObject",
            "description": "A Trackable2DObject represents a virtual object bound to a\n             specific target in a target collection. The target will be\n             tracked in the camera scene, and Drawables will be projected\n             onto the target as soon as it becomes visible and is detected in\n             the scene. Any Trackable2DObject is linked to one target in a\n             specific target collection.<br/><br/>\n\nA Trackable2DObject\n<ul>\n<li>is associated with one Tracker and target(s) inside the Tracker.</li>\n<li>can have Drawables associated with it. These Drawables will represent\nthe Trackable2DObject in the camera view.</li>\n<li>can have triggers associated with it. Triggers fire on certain events\nand execute functions to react on these actions.</li>\n</ul>\n\nOn creation, a reference to the Tracker, as well as the name of the target in\nthe Tracker must be passed. The target name can either be the exact name or a regular expression.\nFor example \"*\" will match all targets that are included in the given tracker. In that case the \n<a href=\"#event_onEnterFieldOfVision\">onEnterFieldOfVision</a> event will pass the recognized target name as parameter.\n<br/><br/> A Trackable2DObject can either be\nenabled or disabled (see ARObject.enabled). Enabled means that the\nTrackable2DObject will be considered in the tracking of objects in the\ncamera, and its triggers will fire on the appropriate events. In case the\nTrackable2DObject is disabled, it will not be considered in the tracking\nprocess, and it will not fire any triggers. Note that the associated Tracker\nmust also be enabled for the Trackable2DObject to be considered for tracking.<br/><br/>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe Trackable2DObject.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n// a circle used for representation\nvar circle = new AR.Circle(5);\n// the referenced tracker\nvar tracker = new AR.Tracker(&quot;http://myserver.com/targetCollection1.wtc&quot;);\n// a Trackable2DObject using the &quot;car&quot; target in the tracker, using the circle as the digital representation.\nvar trackable2DObject = new AR.Trackable2DObject(tracker, &quot;car&quot;, {\n\tdrawables : {\n\t\tcam : circle\n\t}\n});\n</pre>\n\nFor the render size of attached Drawables, see the chapter on <a\nhref=\"../modules/AR.html\">SDUs</a>.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "tracker",
                    "description": "The Tracker the target is stored in",
                    "type": "Tracker"
                },
                {
                    "name": "targetName",
                    "description": "The name of the target in the Tracker",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "renderingOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "onEnterFieldOfVision",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onExitFieldOfVision",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "drawables.cam",
                            "description": "",
                            "type": "Drawable[]",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "ARchitectObject": {
            "name": "ARchitectObject",
            "shortname": "ARchitectObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 880,
            "description": "ARchitectObject is the base class for each object created\n\t\t\t\tthrough the ARchitect.<br/><br/>\n\nWhenever an object is created, the developer needs to make sure it is\nproperly released to free the memory occupied by the object.<br/><br/>\n\nTo free the memory, an object's destroy() method needs to be called.\nThis will undefine all properties of the object and will unlink it from\nthe AR scene. A once destroyed object can never again be viewed in the AR\nscene.<br/><br/>\n\nDestruction of an object will cause three things:\n<ul>\n<li>All properties (except the <i>destroyed</i> property) and methods of\nthe object will be deleted (undefined).</li>\n<li>The <i>destroyed</i> property will be set to true.</li>\n<li>The object will be removed from the AR scene.</li>\n</ul>\n\nAn ARchitectObject is a superclass for other classes and must not be directly\ninstantiated by the developer."
        },
        "ARObject": {
            "name": "ARObject",
            "shortname": "ARObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1045,
            "extends": "ARchitectObject",
            "description": "An ARObject is an abstract class which must not be instantiated directly.\nIt provides basic methods and properties required for the objects rendered in the AR scene.<br/><br/>\n\nARObjects are somehow registered in the real world, either with geo coordinates (GeoObject) or with\nvisual trackable objects (Trackable2DObject). They also have Drawables attached to it, which are used\nto represent the ARObject on the screen."
        },
        "GeoObject": {
            "name": "GeoObject",
            "shortname": "GeoObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3848,
            "extends": "ARObject",
            "description": "A GeoObject represents a virtual object bound to specific\n             locations in the earth's 3-dimensional space. Any GeoObject is\n             linked to at least one Location.<br/><br/>\n\nA GeoObject\n<ul>\n<li>must have at least one location and can never exist without at least one\nlocation.</li>\n<li>can have Drawables associated with it. These Drawables will represent\nthe GeoObject in the camera view.</li>\n<li>can have triggers associated with it. Triggers fire on certain events\nand execute functions to react on these actions.</li>\n</ul>\n\nOn creation, a reference to Locations must be passed to define where the\nGeoObject is located in the real world. <br/><br/> A GeoObject can either be\nenabled or disabled (see ARObject.enabled). Enabled means that the GeoObject\nwill be considered in the calculations to project its drawables onto the\ncamera screen, and its triggers will fire on the appropriate events. In case\nthe GeoObject is disabled, it will not be considered in the calculations, and\nit will not fire any triggers. <br/><br/>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe GeoObject.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n// a GeoObject which is disabled per default\nvar geoObject1 = new AR.GeoObject(geoLocation1, {\n&nbsp;&nbsp;enabled : false\n});\n// now, we enable geoObject1 so it will is considered for projection.\ngeoObject1.enabled = true;\n<br/>\n// a GeoObject which reacts when the GeoObject becomes visible and invisible.\n// whenever it becomes visible, the altitude is increased by 1 meter\n// whenever it becomes invisible, the altitude decreases by 1 meter.\nvar geoObject2 = new AR.GeoObject(geoLocation1);\ngeoObject2.onEnterFieldOfVision = function() {\n&nbsp;&nbsp;geoObject2.locations[0].altitude++;\n};\ngeoObject2.onExitFieldOfVision = function() {\n&nbsp;&nbsp;geoObject2.locations[0].altitude--;\n};\n<br/>\n// a GeoObject which has two locations set\nvar geoObject3 = new AR.GeoObject( [ geoLocation1, geoLocation2 ], null);\n<br/>\n// a GeoObject with triggers and drawables set on creation date \nvar geoObject4 = new AR.GeoObject(locations, {\n&nbsp;&nbsp;//the function executed when the GeoObject enters the field of vision\n&nbsp;&nbsp;onEnterFieldOfVision : function(){ ... },\n&nbsp;&nbsp;//the function executed when the GeoObject exits the field of vision\n&nbsp;&nbsp;onExitFieldOfVision : function(){ ... },\n&nbsp;&nbsp;drawables : { cam :\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[drawable1, drawable2] //the drawables representing the GeoObject in the camera view\n&nbsp;&nbsp;}\n});\n<br/>\n//The Drawables can also be specified as a single object:\nnew AR.GeoObject(locations,\n&nbsp;&nbsp;{ ...\n&nbsp;&nbsp;&nbsp;&nbsp;drawables : { cam : drawable1}\n&nbsp;&nbsp;}\n);\n</pre>\n\nFor the render size of attached Drawables, see the chapter on <a href=\"../modules/AR.html\">SDUs</a>.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "location",
                    "description": "Reference(s) to where this GeoObject is located.",
                    "type": "Location|Location[]"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "renderingOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "onEnterFieldOfVision",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onExitFieldOfVision",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "drawables.cam",
                            "description": "",
                            "type": "Drawable[]",
                            "optional": true
                        },
                        {
                            "name": "drawables.radar",
                            "description": "",
                            "type": "Drawable2D[]",
                            "optional": true
                        },
                        {
                            "name": "drawables.indicator",
                            "description": "",
                            "type": "Drawable2D[]",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Drawable": {
            "name": "Drawable",
            "shortname": "Drawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1606,
            "extends": "ARchitectObject",
            "description": "A Drawable is the base class for any graphical representation of\n             a GeoObject. <br/><br/>\n\nDrawable is a superclass for other classes and must not be directly\ninstantiated by the developer.<br/><br/>\n\nRotations can be applied to Drawables. The local coordinate system of a Drawable is defined as\na righthanded coordinate system, following the definitions below:\n<ul>\n  <li>The origin of the coordinate system is in the location of the Object the Drawable\n  is attached to.</li>\n  <li>The x axis is pointing right</li>\n  <li>The y axis is pointing up</li>\n  <li>The z axis is pointing out of the screen.</li>\n</ul>\nThe definition of right and up depend on the type of the ARObject the Drawable is attached to.\nIn case of a GeoObject, the direction are defined relative to the earth's surface, and the Drawable is always oriented towards the user. In case of\nan Trackable2DObject, the directions are defined relative to the underlying tracked object.<br/><br/>\nRotations are defined and applied in roll-tilt-heading definition (in this order), using static axis."
        },
        "Drawable2D": {
            "name": "Drawable2D",
            "shortname": "Drawable2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1869,
            "extends": "Drawable",
            "description": "Drawable2D is the base class for Drawables representing\n             GeoObjects as 2D objects. <br/><br/>\n\nDrawable2Ds can be scaled and rotated (rotation axis is defined as the normal\non the screen plain, causing a rotation on the screen), and an opacity can be\ndefined. They also allow for horizontal and vertical anchors, defining the\nanchor of Drawable2Ds on the screen relative to the GeoLocations of the\nreferenced GeoObject.<br/><br/>\n\nIn case a Drawable2D is used for representation of a GeoObject having\nmultiple GeoLocations, the Drawable2D will represent each GeoLocation\nseperately. For example, if a GeoObject has an array of 2 GeoLocations set as\nGeoObject.locations, two Drawable2Ds will be visible.<br/><br/>\n\nDrawable2D is a superclass for other classes and must not be directly\ninstantiated by the developer."
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2289,
            "extends": "Drawable2D",
            "description": "A Label drawable represents an ARObject as text.<br/><br/>\n\nThe default anchor settings for a Label are as follows:\n<ul>\n<li>horizontal anchor: AR.CONST.HORIZONTAL_ANCHOR.CENTER</li>\n<li>vertical anchor: AR.CONST.VERTICAL_ANCHOR.MIDDLE</li>\n</ul>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe Label.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a new label and pass some setup parameters\nvar label = new AR.Label(&quot;&quot;, 20, {\n&nbsp;&nbsp;offsetY : 1,\n&nbsp;&nbsp;onClick : function() {\n&nbsp;&nbsp;&nbsp;&nbsp;label.text += &quot;CLICK &quot;\n&nbsp;&nbsp;},\n&nbsp;&nbsp;verticalAnchor : AR.CONST.VERTICAL_ANCHOR.TOP,\n&nbsp;&nbsp;opacity : 0.1\n});\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "text",
                    "description": "The text to be displayed on the Label.",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "The height of the Label, in <a href=\"../modules/AR.html\">SDUs</a>",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "verticalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "zOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotation",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "style.backgroundColor",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style.textColor",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style.fontStyle",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2454,
            "extends": "Drawable",
            "description": "A Model drawable represents an ARObject as a 3D Model.<br/><br/>\nA Model file consist of a link to a WT3 file that is created using the <a href='http://www.wikitude.com/developer/tools/3d-encoder' target='_blank'>Wikitude 3D Encoder</a>,\nas well as certain control properties and triggers that fire on certain events. You can find out more about 3D in the <a href='http://www.wikitude.com/external/doc/documentation/latest/android/encoder.html#wikitude-3d-encoder' target='_blank'>Wikitude SDK documentation</a>.\n\n<br/><br/>\n\n3D content is rendered on top of 2D objects. This limitation exists because of some SDK internal restrictions and might change in an upcoming release.\n\n<br/><br/>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe Model.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a new Model and pass some setup parameters\nvar model = new AR.Model(\"models/my3dModel.wt3\", {\n&nbsp;&nbsp;// scales it to half of the original size\n&nbsp;&nbsp;scale: {\n&nbsp;&nbsp;&nbsp;&nbsp;x: 0.5,\n&nbsp;&nbsp;&nbsp;&nbsp;y: 0.5,\n&nbsp;&nbsp;&nbsp;&nbsp;z: 0.5\n&nbsp;&nbsp;},\n&nbsp;&nbsp;// rotates it 90 degrees around the z-axis and 180 degrees around the x-axis\n&nbsp;&nbsp;rotate: {\n&nbsp;&nbsp;&nbsp;&nbsp;roll: 90.0,\n&nbsp;&nbsp;&nbsp;&nbsp;tilt: 180.0,\n&nbsp;&nbsp;&nbsp;&nbsp;heading: 0.0\n&nbsp;&nbsp;},\n&nbsp;&nbsp;// moves the 0bject 5 SDUs along the x- and the y-axis\n&nbsp;&nbsp;translate: {\n&nbsp;&nbsp;&nbsp;&nbsp;x: 5,\n&nbsp;&nbsp;&nbsp;&nbsp;y: 5,\n&nbsp;&nbsp;&nbsp;&nbsp;z: 0\n&nbsp;&nbsp;},\n&nbsp;&nbsp;onClick : function() {\n&nbsp;&nbsp;&nbsp;&nbsp;//something happens\n&nbsp;&nbsp;}\n});\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uri",
                    "description": "An URI pointing to the zip file including all model information/a>",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "rotate.roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotate.tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotate.heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale.x",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "scale.y",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "scale.z",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "translate.x",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "translate.y",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "translate.z",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onLoaded",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Circle": {
            "name": "Circle",
            "shortname": "Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2898,
            "extends": "Drawable2D",
            "description": "A Circle drawable represents an ARObject as a plain circle.<br/><br/>\n\nThe default anchor settings for a Circle are as follows:\n<ul>\n<li>horizontal anchor: AR.CONST.HORIZONTAL_ANCHOR.CENTER</li>\n<li>vertical anchor: AR.CONST.VERTICAL_ANCHOR.MIDDLE</li>\n</ul>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe Circle.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a new circle and pass some setup parameters to the circle\nvar circle = new AR.Circle(30, {\n&nbsp;&nbsp;offsetX : 1,\n&nbsp;&nbsp;onClick : function() {\n&nbsp;&nbsp;&nbsp;&nbsp;circle.radius *= 2;\n&nbsp;&nbsp;},\n&nbsp;&nbsp;horizontalAnchor : AR.CONST.HORIZONTAL_ANCHOR.LEFT,\n&nbsp;&nbsp;opacity : 0.9\n});\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "radius",
                    "description": "The radius of the circle, in SDUs. Must be a positive number.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "verticalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "zOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotation",
                            "description": "is a valid property for a Circle, however, it won't have any visual effect.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "style.fillColor",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style.outlineColor",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style.outlineSize",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "ImageDrawable": {
            "name": "ImageDrawable",
            "shortname": "ImageDrawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3057,
            "extends": "Drawable2D",
            "description": "ImageDrawable encapsulates an image to be used as visual\n             representation of an ARObject. <br/><br/> If the image does not\n             come in the appropriate size, the <Drawable2D.scale> property\n             can be used to scale it down.\n\nThe default anchor settings for an ImageDrawable are as follows:\n<ul>\n<li>horizontal anchor: AR.CONST.HORIZONTAL_ANCHOR.CENTER</li>\n<li>vertical anchor: AR.CONST.VERTICAL_ANCHOR.MIDDLE</li>\n</ul>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe ImageDrawable.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a new ImageDrawable from an ImageResource and pass some setup parameters\nvar imageDrawable = new AR.ImageDrawable(imageResource, 5, {\n&nbsp;&nbsp;offsetX : 1,\n&nbsp;&nbsp;rotation : 190,\n&nbsp;&nbsp;onClick : function() {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 'this' represents the ImageDrawable\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rotation += 10;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n});\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageResource",
                    "description": "The imageResource used for the ImageDrawable.",
                    "type": "ImageResource"
                },
                {
                    "name": "height",
                    "description": "The height of the ImageDrawable, in <a href=\"../modules/AR.html\">SDUs</a>. The width is set\n           at creation time, width is calculated according to the aspect\n           ratio of the underlying image.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "verticalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "zOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotation",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ]
        },
        "AnimatedImageDrawable": {
            "name": "AnimatedImageDrawable",
            "shortname": "AnimatedImageDrawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3210,
            "extends": "ImageDrawable",
            "description": "AnimatedImageDrawable allows to create animated images using\n             sprite sheets.<br/><br/> A sprite sheet is an image file which\n             contains all key frame images required for the animation. The\n             key frame image size (width and height) is passed at creation\n             time and must be equal for all key frame images. Key frame\n             images will be managed in an array, starting with entry 0. The\n             key frame image array will be filled from left to right, row by\n             row. Any partly filled key frames at the edge of the sprites\n             sheet will be ignored.\n\nThe default anchor settings for an AnimatedImageDrawable are as follows:\n<ul>\n<li>horizontal anchor: AR.CONST.HORIZONTAL_ANCHOR.CENTER</li>\n<li>vertical anchor: AR.CONST.VERTICAL_ANCHOR.MIDDLE</li>\n</ul>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe AnimatedImageDrawable.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a new AnimatedImageDrawable from an ImageResource and pass some setup parameters\nvar animatedImageDrawable = new AR.AnimatedImageDrawable(imageResource, 5, 40, 50 {\n  enabled : false,\n  offsetX : 1,\n  rotation : 190\n});\n// start playing the Animation, with keyframes 0-4, each keyframe is shown 10 miliseconds, and the animation is looped 10 times\nanimatedImageDrawable.animate([0, 1, 2, 3, 4], 10, 10);\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageResource",
                    "description": "The imageResource representing the sprite sheet\n           which is used for the AnimatedImageDrawable.",
                    "type": "ImageResource"
                },
                {
                    "name": "height",
                    "description": "The height of the AnimatedImageDrawable, in <a\n           href=\"../modules/AR.html\">SDUs</a>. The height is set at creation\n           time, width is calculated according to the aspect ratio of the\n           underlying key frame images.",
                    "type": "Number"
                },
                {
                    "name": "keyFrameWidth",
                    "description": "The width of the key frame images in the sprite\n           sheet, in pixels. Must be a whole number.",
                    "type": "Number"
                },
                {
                    "name": "keyFrameHeight",
                    "description": "The height of the key frame images in the sprite\n           sheet, in pixels. Must be a whole number.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties. <br/><br/> Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "keyFrame",
                            "description": "The start keyframe.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "verticalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "zOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotation",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinish",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ]
        },
        "Location": {
            "name": "Location",
            "shortname": "Location",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3443,
            "extends": "ARchitectObject",
            "description": "Location is an abstract class which describes a general\n\t\tlocation of a POI in the augmented scene.<br/><br/>\n\t\tIt should never be instantiated directly."
        },
        "GeoLocation": {
            "name": "GeoLocation",
            "shortname": "GeoLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3491,
            "extends": "Location",
            "description": "Every instance of GeoLocation represents a location in the\n             earth's three-dimensional space. <br/><br/> A GeoLocation\n             consists of latitude and longitude and an optional altitude\n             property. If the altitude is not specified, the altitude will be\n             set to AR.CONST.UNKNOWN_ALTITUDE. In the application, the\n             altitude of the location will implicitly set to the user's\n             current altitude. <br/><br/> The Coordinate system used is WGS\n             84 (see <a\n             href=\"http://en.wikipedia.org/wiki/World_Geodetic_System\">the\n             Wikipedia article</a> for details). <br/><br/> Typically,\n             GeoLocations will be created and then used for the creation of\n             GeoObjects and ActionRanges. <br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nvar location1 = new AR.GeoLocation(47.77317, 13.069929);\nvar altitude = location1.altitude; //altitude = -32768\nvar location2 = new AR.GeoLocation(47.77317, 13.069929, 320.);\naltitude = location2.altitude; //alt = 320\nvar object1 = new AR.GeoObject(location1);\nvar object2 = new AR.GeoObject(location2);\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "latitude",
                    "description": "The latitude of the location, in decimal degrees.",
                    "type": "Number"
                },
                {
                    "name": "longitude",
                    "description": "The longitude of the location, in decimal degrees.",
                    "type": "Number"
                },
                {
                    "name": "altitude",
                    "description": "The altitude of the location, in meters.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "AR.CONST.UNKNOWN_ALTITUDE"
                }
            ]
        },
        "RelativeLocation": {
            "name": "RelativeLocation",
            "shortname": "RelativeLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3665,
            "extends": "Location",
            "description": "A relative location describes a location that is relative to either\n\t\tanother Location, or the location of the user.<br/><br/>\n\t\tIt is specified using the northing and easting of the location in relation to\n\t\tthe referenced location. An optional altitudeDelta can also be applied.\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//a relative location being 12 meters south, 20 meters west and 13 meters lower than current position of the user\nvar location2 = new AR.RelativeLocation(null, -12, -20, -13);\n\nvar geoLoc = new AR.GeoLocation(47.77317, 13.069929, 320.);\n//a relative location being 12 meters north, 20 meters east and 13 meters higher than geoLoc\nvar location1 = new AR.RelativeLocation(geoLoc, 12, 20, 13);\n</pre>\n\nRelative locations move with their referenced locations.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "location",
                    "description": "The location which is used as the reference point. If null is passed, the current position of the\n           user is used as a reference point.",
                    "type": "Location"
                },
                {
                    "name": "northing",
                    "description": "Specifies the number of meters the relative location is further north than the referenced location.\n           A negative value specifies the number of meters south.",
                    "type": "Number"
                },
                {
                    "name": "easting",
                    "description": "Specifies the number of meters the relative location is further east than the referenced location.\n           A negative value specifies the number of meters west.",
                    "type": "Number"
                },
                {
                    "name": "altitudeDelta",
                    "description": "Specifies the number of meters the relative location is higher (positive) or lower (negative)\n           than the referenced location. This is also applied when the altitude of the referenced location is unknown,\n           causing the relative location to definitely appear higher or lower then the referenced location.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "ActionArea": {
            "name": "ActionArea",
            "shortname": "ActionArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4018,
            "extends": "ARchitectObject",
            "description": "An ActionArea defines a certain geo area where actions should be\n             executed on enter and on exit. An ActionArea is a 2-dimensional\n             area, altitude will be ignored. As soon as the user enters the\n             ActionArea, onEnter() will be executed (in case the function is\n             defined). When the user leaves the ActionArea, onExit() will be\n             executed (in case the function is defined).<br/><br/>\n\nThe boundary of the ActionArea is a part of the Action Area, thus an object\nlocated right at the boundary of an ActionArea will be considered to be <i>in</i>\nthe ActionArea.<br/><br/>\n\nActionArea is a superclass for other classes and must not be directly\ninstantiated by the developer."
        },
        "ActionRange": {
            "name": "ActionRange",
            "shortname": "ActionRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4183,
            "extends": "ActionArea",
            "description": "An ActionRange defines a circle around a certain Location.\n             Events are fired as soon as the user enters or leaves this\n             circle.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nvar location1 = new AR.GeoLocation(47.77317, 13.069929);\nvar actionRange = new AR.ActionRange(location1, 500);\nvar location2 = new AR.GeoLocation(48.77317, 13.069929);\nvar inArea1 = actionRange.isInArea(location1); //inArea1 = true\nvar inArea2 = actionRange.isInArea(location2); //inArea2 = false\n</pre>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe ImageDrawable.<br/><br/>\n\n<pre class=\"prettyprint\">\nvar actionRange2 = new AR.ActionRange(location1, 500, {\n\tonEnter : function() {\n\t\tactionRange2.enabled = false; //an ActionArea which can only be entered once\n\t}\n});\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "location",
                    "description": "a single Location defining the center point of the\n           circle.",
                    "type": "Location"
                },
                {
                    "name": "radius",
                    "description": "the radius of the ActionRange in meters.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties. <br/><br/> Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "onEnter",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "onExit",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "BoundingRectangle": {
            "name": "BoundingRectangle",
            "shortname": "BoundingRectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4314,
            "description": "A BoundingRectangle delivers information on the size of a\n             Drawable2D on the screen. <br/><br/>\n\nThe Bounding Rectangle of a Drawable2D is defined as follows:\n<ul>\n<li>The Bounding Rectangle has it's edges parallel to the screen's edges.</li>\n<li>The Bounding Rectangle fully contains the Drawable2D</li>\n<li>The Bounding Rectangle of the Drawable2D is the smallest rectangle\ncontaining the Drawable2D.</li>\n</ul>\n\nBoundingRectangle must not be directly instantiated by the developer."
        },
        "ImageResource": {
            "name": "ImageResource",
            "shortname": "ImageResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4364,
            "extends": "ARchitectObject",
            "description": "ImageRessource encapsulates an image file. An ImageResource is\n             represented via a URI pointing to the image file. An Image has a\n             width and a height, in pixels.<br/><br/>\n\nImmediately after object creation, the system will start downloading the\nimage file onto the device.<br /><br />\n<div class=\"paragraph\">Example:</div>\n<pre class=\"prettyprint\">\nvar imageres = new AR.ImageResource(&quot;http://path.to.my/image/resource.png&quot);\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uri",
                    "description": "The uri to the image file.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "onLoaded",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Animation": {
            "name": "Animation",
            "shortname": "Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4526,
            "extends": "ARchitectObject",
            "description": "Animations allow constant changes to numeric\n             values/properties of an object. <br/><br/> Animations can be\n             seen as functions defining the progress of the change on the\n             value.<br/><br/> \nIt is an abstract class that must not be instantiated directly."
        },
        "ModelAnimation": {
            "name": "ModelAnimation",
            "shortname": "ModelAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4670,
            "extends": "Animation",
            "description": "ModelAnimations allow the control of animations defined in a Model. You can find more about working with 3D animations in the <a href='http://www.wikitude.com/external/doc/documentation/latest/android/assetsworkflow.html#working-with-3d-animations' target='_blank'>Wikitude SDK documentation</a>.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//We want to start an animation inside a model\nvar model = new AR.Model(&quot;http://myServer.com/myModel.zip&quot;);\nvar modelAnim = new AR.ModelAnimation(model, &quot;hit&quot;); //start hit-animation defined inside model\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "model",
                    "description": "The model that holds the animation.",
                    "type": "Model"
                },
                {
                    "name": "animationId",
                    "description": "The ID the animation is referenced with inside the model.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "onStart",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinish",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        "PropertyAnimation": {
            "name": "PropertyAnimation",
            "shortname": "PropertyAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4734,
            "extends": "Animation",
            "description": "Property Animations allow constant changes to a numeric\n             value/property of an object, dependent on start-value, end-value\n             and the duration of the animation. <br/><br/> Animations can be\n             seen as functions defining the progress of the change on the\n             value. The Animation can be parametrized via easing curves.<br/><br/> \n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//We want to animate a GeoLocation to move 100 meters up in altitude\n// over a period of 10 seconds to simulate an elevator\nvar elevatorAnimation = new AR.PropertyAnimation(\n&nbsp;&nbsp;geoLocation1, //the object geoLocation1 holds the animated property\n&nbsp;&nbsp;&quot;altitude&quot;, //the property altitude will be animated\n&nbsp;&nbsp;500, //the start value of the animation is 500 meters\n&nbsp;&nbsp;600, //the resulting value of the animation is 600 meters\n&nbsp;&nbsp;10000, //the duration of the elevator climb is 10 seconds (10000 miliseconds)\n&nbsp;&nbsp;{type: AR.CONST.EASING_CURVE_TYPE.EASE_IN_OUT_QUAD}, //easing curve to simulate acceleration and deceleration\n&nbsp;&nbsp;{onFinish : beepSound.play} //when finished, play a beep sound that elevator doors will now open\n);\n</pre>\n\nEasing Curves describe in which way a PropertyAnimation will\nchange the animated property's value from the start- to the\nend-value. A good description of various Easing Curves,\nincluding the ones supported by the Wikitude ARchitect, is\ndescribed <a href=\"http://doc.qt.nokia.com/solutions/4/\nqtanimationframework/qteasingcurve.html\">here</a>.<br/><br/>\n             \nThe following Easing Curve types are defined (see\nAR.CONST.EASING_CURVE_TYPE):<br/><br/>\n<table>\n<tr><td><b>Constant<b></td><td><b>String Representation</b></td></tr>\n<tr><td>LINEAR</td><td>linear</td></tr>\n<tr><td>EASE_IN_QUAD</td><td>easeInQuad</td></tr>\n<tr><td>EASE_OUT_QUAD</td><td>easeOutQuad</td></tr>\n<tr><td>EASE_IN_OUT_QUAD</td><td>easeInOutQuad</td></tr>\n<tr><td>EASE_OUT_IN_QUAD</td><td>easeOutInQuad</td></tr>\n<tr><td>EASE_IN_CUBIC</td><td>easeInCubic</td></tr>\n<tr><td>EASE_OUT_CUBIC</td><td>easeOutCubic</td></tr>\n<tr><td>EASE_IN_OUT_CUBIC</td><td>easeInOutCubic</td></tr>\n<tr><td>EASE_OUT_IN_CUBIC</td><td>easeOutInCubic</td></tr>\n<tr><td>EASE_IN_QUAT</td><td>easeInQuat</td></tr>\n<tr><td>EASE_OUT_QUAT</td><td>easeOutQuat</td></tr>\n<tr><td>EASE_IN_OUT_QUAT</td><td>easeInOutQuat</td></tr>\n<tr><td>EASE_OUT_IN_QUAT</td><td>easeOutInQuat</td></tr>\n<tr><td>EASE_IN_QUINT</td><td>easeInQuint</td></tr>\n<tr><td>EASE_OUT_QUINT</td><td>easeOutQuint</td></tr>\n<tr><td>EASE_IN_OUT_QUINT</td><td>easeInOutQuint</td></tr>\n<tr><td>EASE_OUT_IN_QUINT</td><td>easeOutInQuint</td></tr>\n<tr><td>EASE_IN_ELASTIC</td><td>easeInElastic</td></tr>\n<tr><td>EASE_OUT_ELASTIC</td><td>easeOutElastic</td></tr>\n<tr><td>EASE_IN_OUT_ELASTIC</td><td>easeInOutElastic</td></tr>\n<tr><td>EASE_OUT_IN_ELASTIC</td><td>easeOutInElastic</td></tr>\n<tr><td>EASE_IN_BACK</td><td>easeInBack</td></tr>\n<tr><td>EASE_OUT_BACK</td><td>easeOutBack</td></tr>\n<tr><td>EASE_IN_OUT_BACK</td><td>easeInOutBack</td></tr>\n<tr><td>EASE_OUT_IN_BACK</td><td>easeOutInBack</td></tr>\n<tr><td>EASE_IN_SINE</td><td>easeInSine</td></tr>\n<tr><td>EASE_OUT_SINE</td><td>easeOutSine</td></tr>\n<tr><td>EASE_IN_OUT_SINE</td><td>easeInOutSine</td></tr>\n<tr><td>EASE_OUT_IN_SINE</td><td>easeOutInSine</td></tr>\n<tr><td>EASE_IN_EXPO</td><td>easeInExpo</td></tr>\n<tr><td>EASE_OUT_EXPO</td><td>easeOutExpo</td></tr>\n<tr><td>EASE_IN_OUT_EXPO</td><td>easeInOutExpo</td></tr>\n<tr><td>EASE_OUT_IN_EXPO</td><td>easeOutInExpo</td></tr>\n<tr><td>EASE_IN_CIRC</td><td>easeInCirc</td></tr>\n<tr><td>EASE_OUT_CIRC</td><td>easeOutCirc</td></tr>\n<tr><td>EASE_IN_OUT_CIRC</td><td>easeInOutCirc</td></tr>\n<tr><td>EASE_OUT_IN_CIRC</td><td>easeOutInCirc</td></tr>\n<tr><td>EASE_IN_BOUNCE</td><td>easeInBounce</td></tr>\n<tr><td>EASE_OUT_BOUNCE</td><td>easeOutBounce</td></tr>\n<tr><td>EASE_IN_OUT_BOUNCE</td><td>easeInOutBounce</td></tr>\n<tr><td>EASE_OUT_IN_BOUNCE</td><td>easeOutInBounce</td></tr>\n<tr><td>EASE_IN_CURVE</td><td>easeInCurve</td></tr>\n<tr><td>EASE_OUT_CURVE</td><td>easeOutCurve</td></tr>\n<tr><td>EASE_SIN_CURVE</td><td>easeSinCurve</td></tr>\n<tr><td>EASE_COS_CURVE</td><td>easeCosineCurve</td></tr>\n\n</table><br/>\n\n\nCertain Easing Curves can be parametrized with additional values, such as\namplitude, period and overshoot.<br/><b>Amplitude</b> is valid for\nall easing curves with the type description ending on ELASTIC or BOUNCE (like\nEASE_IN_ELASTIC or EASE_IN_BOUNCE), and will be ignored for all others.<br/><b>Overshoot</b> is valid\nfor all easing curves with the type description ending on BACK (like\nEASE_IN_BACK), and will be ignored for all others.<br/><b>Period</b> is valid\nfor all easing curves with the type description ending on BOUNCE (like\nEASE_IN_BOUNCE), and will be ignored for all others.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nvar easingCurve = {\n&nbsp;&nbsp;type : AR.CONST.EASING_CURVE_TYPE.EASE_IN_BACK,\n&nbsp;&nbsp;overshoot : 1.70158 //results in a 10% overshoot\n};\n</pre>\n\nThe same Easing Curve can be instanziated by writing\n\n<pre class=\"prettyprint\">\nvar easingCurve = {\n&nbsp;&nbsp;type : \"easeInBack\",\n&nbsp;&nbsp;overshoot : 1.70158 //results in a 10% overshoot\n};\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The object which holds the property that will be animated. Must be an ARchitectObject.",
                    "type": "ARchitectObject"
                },
                {
                    "name": "property",
                    "description": "The object's property name that will be animated.",
                    "type": "String"
                },
                {
                    "name": "start",
                    "description": "The value the PropertyAnimation will start with. If null,\n           the current value of the property will be used. <b>Remark:</b> In case null is set as start value, and the PropertyAnimation loops more than once, the PropertyAnimation will not reset the value after it has completed the first run, and the value won't change in the following runs. To reset the value after each run, supply the property's current value as start value.",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "The value the PropertyAnimation will end with. The value must\n           be non-null.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "The duration of the PropertyAnimation, in milliseconds.\n           The value must be non-negative and a whole number.",
                    "type": "Number"
                },
                {
                    "name": "easingCurve",
                    "description": "an easing curve describing the nature of the\n           animation (see description above for details). If the easingCurve\n           parameter is omitted, set to null or undefined or does not contain\n           a type property, the easingCurve parameter will default to a linear\n           easing curve. The easing curve can be parametrized with the following values:",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{type:\"linear\"}",
                    "props": [
                        {
                            "name": "type",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "amplitude",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "overshoot",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "period",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "props": [
                        {
                            "name": "onStart",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinish",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "AnimationGroup": {
            "name": "AnimationGroup",
            "shortname": "AnimationGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4960,
            "extends": "Animation",
            "description": "An AnimationGroup allows to run a group of Animations sequentially or in parallel.<br/><br/>\nAn AnimationGroup consists of an array of Animations that form the AnimationGroup.\nA parallel AnimationGroup runs all contained Animations in parallel, starting at the same time.\nA sequential AnimationGroup runs all contained Animations sequentially, starting with the first Animation in the array.\nThe length of the AnimationGroup will be defined as\n<ul>\n<li>the maximum length of the contained Animations in case of a parallel AnimationGroup</li>\n<li>the sum of all lengths of the contained Animations in case of a sequential AnimationGroup</li>\n</ul> \n\n<br/><br/> \n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//We want to animate two GeoLocations to move 100 meters up in altitude at the same time\n// over a period of 10 seconds to simulate an elevator\nvar elevatorAnimation1 = new AR.PropertyAnimation(\n&nbsp;&nbsp;geoLocation1, //the object geoLocation1 holds the animated property\n&nbsp;&nbsp;&quot;altitude&quot;, //the property altitude will be animated\n&nbsp;&nbsp;500, //the start value of the animation is 500 meters\n&nbsp;&nbsp;600, //the resulting value of the animation is 600 meters\n&nbsp;&nbsp;10000, //the duration of the elevator climb is 10 seconds (10000 miliseconds)\n&nbsp;&nbsp;{type: AR.CONST.EASING_CURVE_TYPE.EASE_IN_OUT_QUAD}, //easing curve to simulate acceleration and deceleration\n);\nvar elevatorAnimation2 = new AR.PropertyAnimation(\n&nbsp;&nbsp;geoLocation2, //the object geoLocation2 holds the animated property\n&nbsp;&nbsp;&quot;altitude&quot;, //the property altitude will be animated\n&nbsp;&nbsp;500, //the start value of the animation is 500 meters\n&nbsp;&nbsp;600, //the resulting value of the animation is 600 meters\n&nbsp;&nbsp;10000, //the duration of the elevator climb is 10 seconds (10000 miliseconds)\n&nbsp;&nbsp;{type: AR.CONST.EASING_CURVE_TYPE.EASE_IN_OUT_QUAD}, //easing curve to simulate acceleration and deceleration\n);\nvar animationGroup = new AR.AnimationGroup(\n&nbsp;&nbsp;AR.CONST.ANIMATION_GROUP_TYPE.PARALLEL, // the animations will run in parallel\n&nbsp;&nbsp;[elevatorAnimation1, elevatorAnimation2], // the animations in the AnimationGroup\n&nbsp;&nbsp;{onFinish : beepSound.play} //when finished, play a beep sound that elevators have reached their positions\n);\n// now, start the animation group\nanimationGroup.start();\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "The type of AnimationGroup. Must either be \"parallel\" or \"sequential\".\n           Use of the values defined in AR.CONST.ANIMATION_GROUP_TYPE is suggested.",
                    "type": "String"
                },
                {
                    "name": "animations",
                    "description": "The array of animations.",
                    "type": "Animation[]"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties. Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "onStart",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinish",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Sound": {
            "name": "Sound",
            "shortname": "Sound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5047,
            "extends": "ARchitectObject",
            "description": "An instance of this class represents a sound file, specified by\n             a URI.<br/><br/>\n\nAn instance of Sound traverses through various states during its lifetime,\nwhich are defined in AR.CONST.STATE. At each point in time, a Sound instance\nhas exactly one of the following states:\n<ul>\n<li>INITIALIZED</li>\n<li>LOADING</li>\n<li>LOADED</li>\n<li>PLAYING</li>\n<li>PAUSED</li>\n<li>ERROR</li>\n</ul>\n\nThe typical state transitions during the lifecycle of a Sound instance is as\nfollows:\n<ul>\n<li>Creation of the object with new AR.Sound(...) -> INITIALIZE</li>\n<li>sound.load() -> LOADING</li>\n<li>Loading finished -> LOADED</li>\n<li>Start playing -> PLAYING</li>\n<li>Pause playing -> PAUSED</li>\n<li>Resume playing -> PLAYING</li>\n<li>Playing finished -> LOADED</li>\n<li>Call sound.destroy() -> Object destroyed</li>\n</ul>\n\nOn important state changes, a trigger (onLoaded(), onFinishedPlaying(),\nonError()) will be called by the system. A developer can react on these\nevents by providing custom logic to these triggers. In case no custom logic is\napplied to a trigger, the trigger will not fire. The triggers can be\npassed on creation time, or added later.<br/><br/>\n\nIn case no preloading should be performed, a Sound file can also be played\nright after it has been initialized. The Sound file will then be streamed and\nnot stored on the device. Keep in mind that this might cause a delay in\nplaying the file, as it has to be loaded first.\nPlease note that the state will not change to either LOADING, LOADED, PLAYING or PAUSED,\nit will remain in INITIALIZED state as it is streamed onto the phone. Still,\nthe triggers will fire.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nvar sound = new AR.Sound(&quot;http://www.myuri.com/sound.mp3&quot;, {\n&nbsp;&nbsp;onLoaded : function(){sound.play();},\n&nbsp;&nbsp;onError : function(){\n&nbsp;&nbsp;&nbsp;&nbsp;// alert the user that the sound file could not be loaded\n&nbsp;&nbsp;&nbsp;&nbsp;},\n});\nsound.onFinishedPlaying = function(){alert(&quot;Playing finished&quot;);};\n</pre>\n\nNote that reloading the content is not possible - calling sound.load() while\nthe sound file is in a state different from INITIALIZED does not have any\neffect. <br/><br/>\n\nExecuting sound.play() while the file is in a state different from LOADED, PAUSED or\nINITIALIZED will have no effect.<br/><br/>\n\nWhen a Sound file in LOADED state is no longer needed, it is essential to\ncall destroy() to clean up ressources on the device.<br/><br/>\n\nWhen a Sound file has been paused, there are two ways to resume playing: Calling\nresume() will continue playing at the time the file was paused. Calling play() will start\nplaying the file from the very beginning. If a Sound file is initialized, and resume() is\ncalled, it will have the same effect as play(1).<br/><br/>\n\nThe ERROR state indicates that a problem was detected either while loading or\nplaying the file.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uri",
                    "description": "The uri to the audio file.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "onLoaded",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinishedPlaying",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Style": {
            "name": "Style",
            "shortname": "Style",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5336,
            "description": "Style options allow the customization of the appearance of\n             various Drawables.<br/><br/>\n\nA Style is never created with <i>new</i>, it has to be created using\nJSON, as described in the example below.<br/><br/>\n\nNote that Drawable-types accept only a certain set of properties in Style.\nThe accepted options are listed for each Drawable, other options are simply\nignored.<br/><br/>\n\nWhen a Style is passed to a Drawable, the properties are passed by value,\nmodifications on the Style object after applying it to a Drawable will not\nhave any effect on the Drawable's style. Use drawable.style to later\ncustomize the Style for a specific Drawable.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a Style, red fill color, green outline\nvar myStyle = {fillColor : '#FF0000', outlineSize : 2, outlineColor : '#00FF00'};\n<br/>\n//applying style options on creation of 2 circles\nvar circle1 = new AR.Circle(40, {style : myStyle});\nvar circle2 = new AR.Circle(50, {style : myStyle});\n<br/>\n//now, we change circle1's fill color to blue. circle2 will not change its color.\ncircle1.style.fillColor = '#0000FF';\n</pre>"
        },
        "CONST": {
            "name": "CONST",
            "shortname": "CONST",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5556,
            "static": 1,
            "description": "A static class containing constant values. The Singleton\n             instance of CONST will automatically be created on startup."
        },
        "context": {
            "name": "context",
            "shortname": "context",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5972,
            "static": 1,
            "description": "context includes some general functions which allow interaction\n             with system components.<br/><br/>\n\nThe Singleton instance of the class will automatically be created on World\nstartup and can be accessed via AR.context.<br/><br/>\n\ncontext also allows for some custom functionality, for example\nonLocationChanged, which will be triggered by the system as soon as the\nuser's location changes. It enables the developer to find out about the\nuser's location and thus setup the AR scene to his needs.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nAR.context.onLocationChanged = function(latitude, longitude, altitude, accuracy){\n&nbsp;&nbsp;//now, add custom functionality to build the AR scene based on the location\n&nbsp;&nbsp;...\n}\n</pre>"
        },
        "logger": {
            "name": "logger",
            "shortname": "logger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6456,
            "static": 1,
            "description": "logger allows logging of messages, which will then be printed in\n             the ARchitect Logging Console.<br/><br/>\n\nThe Singleton instance of the logger class will automatically be created on\nWorld startup and can be accessed via AR.logger.<br/><br/>"
        },
        "radar": {
            "name": "radar",
            "shortname": "radar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6621,
            "static": 1,
            "description": "radar represents a seperate section on the screen which provides\n             a 2-dimensional radar indicating where GeoObjects are located\n             around the user.<br/><br/>\n\nThe Singleton instance of the class will automatically be created on World\nstartup and can be accessed via AR.radar.<br/><br/>\n\nThe position and size of the radar is defined in a DOM-element in the HTML page.\nThe DOM element for the radar is specified by the container property.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n&lt;body&gt;\n&nbsp;&nbsp;&lt;div style=\"position:absolute;top:10px;left:10px;width:50px;height:100px;\" id=\"radarContainer\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n\nAR.radar.container = document.getElementById(\"radarContainer\");\n</pre>\n\nThe meaning of the various properties are described below, refer to the figure below for illustration.<br/><br/>\n<img src=\"../assets/img/radarCS.png\" /><br/><br/>"
        },
        "VideoDrawable": {
            "name": "VideoDrawable",
            "shortname": "VideoDrawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6877,
            "extends": "Drawable2D",
            "description": "VideoDrawable encapsulates a video to be used as visual\n             representation of an ARObject. The video must be encoded using the H.264 video compression standard.\n<br/><br/>\nThe default anchor settings for a VideoDrawable are as follows:\n<ul>\n<li>horizontal anchor: AR.CONST.HORIZONTAL_ANCHOR.CENTER</li>\n<li>vertical anchor: AR.CONST.VERTICAL_ANCHOR.MIDDLE</li>\n</ul>\n<p>\nVideoDrawables can be rendered with transparent pixels. See <a target=\"_blank\" href=\"http://www.wikitude.com/external/doc/documentation/3.2/web/video.html#transparentvideo\">here</a> for details.\n\nOn creation, setup parameters can be passed to customize the properties of\nthe VideoDrawable.\n</p>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n var video = new AR.VideoDrawable(\"assets/video.mp4\", 0.5, {\n   offsetX: 0.2,\n   offsetY: 0.2\n   });\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uri",
                    "description": "The URI to the video.",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "The height of the VideoDrawable, in <a\n           href=\"../modules/AR.html\">SDUs</a>. The height is set at creation\n           time, width is calculated according to the aspect ratio of the\n           video.",
                    "type": "Float"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "verticalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "zOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotation",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinish",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "onLoaded",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onPlaybackStarted",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFinishedPlaying",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "isTransparent",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "HtmlDrawable": {
            "name": "HtmlDrawable",
            "shortname": "HtmlDrawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7445,
            "extends": "Drawable2D",
            "description": "A HTML-described representation of an ARObject as a plain circle.<br/><br/>\n\nA HtmlDrawable can be created with either\n<ul>\n<li>a string holding the HTML content</li>\n<li>using a URI that points to HTML content that will be used for representation.</li>\n</ul>\nIf both properties are given on creation, plain HTML will take precedence over the URI content.\nIf the properties are changed afterwards, the last change will take immediate effect, regardless\nof if it is specified via plain HTML or via URI.<br/><br/>\nIn case both html and uri are set to null or undefined, the HtmlDrawable will not be rendered on the screen.   \n\nThe default anchor settings for a HtmlDrawable are as follows:\n<ul>\n<li>horizontal anchor: AR.CONST.HORIZONTAL_ANCHOR.CENTER</li>\n<li>vertical anchor: AR.CONST.VERTICAL_ANCHOR.MIDDLE</li>\n</ul>\n\nOn creation, setup parameters can be passed to customize the properties of\nthe HtmlDrawable.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n//create a new html drawable and pass some setup parameters to it\nvar htmlDrawable = new AR.HtmlDrawable({html:\"&lt;div&gt;My div&lt;/div&gt;\"}, 1, {\n&nbsp;&nbsp;offsetX : 1,\n&nbsp;&nbsp;onClick : function() {\n&nbsp;&nbsp;&nbsp;&nbsp;htmlDrawable.html += \"&lt;div&gt;Another div&lt;/div&gt;\";\n&nbsp;&nbsp;},\n&nbsp;&nbsp;horizontalAnchor : AR.CONST.HORIZONTAL_ANCHOR.LEFT,\n&nbsp;&nbsp;opacity : 0.9\n});\n\n// precedence example:\n// htmlDrawable will use the html representation\nhtmlDrawable = new AR.HtmlDrawable({\n&nbsp;&nbsp;html:\"&lt;div&gt;My div&lt;/div&gt;\", uri:\"http://mydomain.com/my.html\"\n}, 1);\n// now, uri will take precedence:\nhtmlDrawable.uri = \"http://mydomain.com/myNew.html\";\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "content",
                    "description": "a JSON object describing the content of the HtmlDrawable.\n           The object must either contain a html property of type string containing the HTML string (see example above),\n           or a uri property of type string pointing to some HTML content. If both properties are specified, html takes\n           precedence to uri. However, at least on of html and uri must be specified.",
                    "type": "Object"
                },
                {
                    "name": "width",
                    "description": "The width of the HTML drawable, in SDUs. Must be a positive number. Controls how wide the HtmlDrawable will be\n\t\t\t  rendered on the screen. The height of the HtmlDrawable will be automatically adjusted\n\t\t\t  keeping the aspect ratio of the Drawable.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "horizontalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "verticalAnchor",
                            "description": "",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetY",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "zOrder",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "rotation",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "onClick",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onLoaded",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "roll",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "tilt",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "heading",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "viewportWidth",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "256"
                        },
                        {
                            "name": "viewportHeight",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "256"
                        },
                        {
                            "name": "backgroundColor",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "clickThroughEnabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "allowDocumentLocationChanges",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "onDocumentLocationChanged",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Tracker": {
            "name": "Tracker",
            "shortname": "Tracker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AR",
            "namespace": "",
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7870,
            "extends": "ARchitectObject",
            "description": "A Tracker represents a Target Collection which is created with\n             the Target Management Tool.<br/><br/>\n\nA Tracker needs to include the binary .wtc targets describing the targets and\nneeds to be referenced via a URI. The Tracker object is used to reference\nspecific Trackable2DObjects (the targets inside the target collection).<br/><br/>\n\nTrackers can be enabled and disabled. Only one Tracker can be active at a\ntime. The current enabled/disabled state of a Tracker is reflected in the\nenabled property. Should there be multiple Trackers used in the ARchitect\nfile, the following logic applies to specify the currently active Tracker:\n<ul>\n<li>When a new Tracker is created, it is automatically set to the active\none, unless it was created with enabled set to false.</li>\n<li>When a specific Tracker is enabled, it is automatically set to the\nactive one. The previously active Tracker is disabled by the system.</li>\n</ul>\nIn case a Tracker is disabled by the system, the developer will be notified\nvia the onDisabled trigger.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\n// a Tracker referencing a target collection on a server\nvar tracker1 = new AR.Tracker(\"http://myserver.com/targetCollection1.wtc\" , {\n  onDisabled : function(){\n    //tracker has been disabled by the system\n  }\n});\nvar enabled = tracker1.enabled; //true\n\n// a second tracker, which will cause tracker1 to be disabled\nvar tracker2 = new AR.Tracker(\"http://myserver.com/targetCollection1.wtc\");\n\nenabled = tracker1.enabled; //false\nenabled = tracker2.enabled; //true\n</pre>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The URI to the target collection",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Setup-Parameters to customize additional object\n           properties.\n           <br/><br/>\n           Accepted options-properties are",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enabled",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "onLoaded",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onDisabled",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 739,
            "itemtype": "property",
            "name": "snapToScreen.enabled",
            "type": "Boolean",
            "description": "If set to true, all cam drawables will be rendered in a div, specified by the snapToScreen.snapContainer element. The Trackable2DObject has to be in the onEnterFieldOfVision state at this point in time. If not, enabled = true has no effect. Setting enabled to false while not in the onEnterFieldOfVision state instead will work. So a Trackable2DObject can only be set to screen when the target is recognized, but can be set back to normal at any time if it's currently snapped.",
            "default": "false",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 758,
            "itemtype": "property",
            "name": "snapToScreen.enableDelayed",
            "type": "Number",
            "description": "The time that should pass by from when the onEnterFieldOfVision function was called and the attached drawables should snap to screen. Setting a negati\tve value will disable the functionality. When the target is lost during the delay, the onDelayedSnapInterruption function will be called if set.",
            "default": "-1",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 778,
            "itemtype": "property",
            "name": "snapToScreen.enableOnExitFieldOfVision",
            "type": "Boolean",
            "description": "If set to true, the associated cam drawables will snap to the screen when the onExitFieldOfVision trigger fires. Using this property the drawables can snap to the screen when the target is lost which would not be possible with the enabled property. To disable snap to screen set the enabled property to false at any time (e.g. in the onEnterFieldOfVision trigger).",
            "default": "false",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 799,
            "itemtype": "property",
            "name": "snapToScreen.snapContainer",
            "type": "DOM Element",
            "description": "the DOM element that contains all cam drawables, associated with this Trackable2DObject if snap to screen is enabled. Note that all drawables might need to be adapted by there scale so that they fit into the element. Also Make sure that the aspect ratio of the DOM element.",
            "default": "null",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 830,
            "itemtype": "event",
            "name": "snapToScreen.onSnappedToScreen",
            "type": "Function",
            "description": "A function that should be called when the underlaying ARObject snapped to the screen.",
            "params": [
                {
                    "name": "element",
                    "description": "The DOM Element to which the cam drawables snapped.",
                    "type": "DOM Element"
                }
            ],
            "default": "null",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 849,
            "itemtype": "event",
            "name": "snapToScreen.onDelayedSnapInterruption",
            "type": "Function",
            "description": "A function that should be called when a delayed snap to screen was interrupted because of the onExitFieldOfVision event.",
            "params": [
                {
                    "name": "interruptionTimestamp",
                    "description": "the milliseconds that passed by between the activation through the enabledDelayed property and the interruption through the onExitFieldOfVision event.",
                    "type": "Number"
                }
            ],
            "default": "null",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 909,
            "itemtype": "property",
            "name": "destroyed",
            "type": "boolean",
            "description": "Indicates if the object has already been destroyed.",
            "class": "ARchitectObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 994,
            "itemtype": "method",
            "name": "destroy",
            "description": "Destroys the object.",
            "class": "ARchitectObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1106,
            "itemtype": "property",
            "name": "enabled",
            "type": "boolean",
            "description": "A boolean flag to enable or disable the ARObject.",
            "default": "true",
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1125,
            "itemtype": "property",
            "name": "renderingOrder",
            "type": "Number",
            "description": "Drawables of different ARObjects might overlap. In this case, renderingOrder defines the rendering order of the Drawables of the ARObject.\nARObjects with higher renderingOrder values cause their Drawables to be drawn on top of the Drawables of ARObjects with lower renderingOrder values.\nIn case two ARObjects have set the same renderingOrder, the Drawables are rendered based on the distance, causing objects closer to the user to\noverlap objects further away.  \n<br/>For example, If you want to bring Drawables of a certain ARObject to the very front, set the renderingOrder value of the corresponding ARObject\nto a very high value.\n<br/><br/>For the printing order of Drawables within the same ARObject, refer to Drawable2D.zOrder.\n<br/><br/>Must be a whole number.",
            "default": "0",
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1150,
            "itemtype": "event",
            "name": "onEnterFieldOfVision",
            "description": "The trigger will fire when the ARObject's visibility has\n             changed from invisible to visible.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onEnterFieldOfVision.",
            "params": [
                {
                    "name": "targetName",
                    "description": "In case of a Trackable2DObject holds the name of the recognized target. Used in combination with wildcards for targetName.",
                    "type": "String"
                }
            ],
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1173,
            "itemtype": "event",
            "name": "onExitFieldOfVision",
            "description": "Will be executed when the ARObject's visibility has changed\n             from visible to invisible.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onExitFieldOfVision.",
            "params": [
                {
                    "name": "targetName",
                    "description": "In case of a Trackable2dObject this will hold the name of the target that exited the field of vision.",
                    "type": "String"
                }
            ],
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1197,
            "itemtype": "event",
            "name": "onClick",
            "description": "Will be executed when any of the ARObject's Drawables have been clicked,\nand none of the clicked Drawables's onClick() triggers (might also be referenced by another ARObject)\nhave been set to quit the click chain. ARObject.onClick() will be executed after any Drawable.onClick() triggers have\nbeen executed.<br/><br/>\nIn case multiple ARObjects are hit by the click, the order of the execution is defined by the distance\nof the ARObject to the user, with the closest ARObject's click trigger executed first.<br/><br/>\n             \nThe return value of the\nfunction determines if, after the onClick()-Function was\nexecuted for this ARObject, the queue shall continue to execute\nonClick() for the next ARObject in the queue. In case the last\nARObject in the queue still requests to continue the click-queue,\ncontext.onScreenClick() will be executed.\n\nThe return value of the function decides what to do next. If false, the click-queue should not stop with this ARObject.\nThus, the next ARObject's onClick() function will be executed. This is the default value in case no return value is\nset or the function is not defined for this ARObject. If true, the queue-execution will stop at the current ARObject,\nunderlying ARObjects will not receive onClick() calls.",
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1242,
            "itemtype": "method",
            "name": "isVisible",
            "description": "Returns the current visibility state of the\n             ARObject. An ARObject is defined visible when at\n             least one of the ARObject's locations (geolocations or visual tracker) is projected\n             onto a screen coordinate which is currently visible\n             on the screen.",
            "return": {
                "description": "Whether the ARObject is currently visible on\n        the screen (true) or invisble (false).",
                "type": "Boolean"
            },
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1283,
            "itemtype": "property",
            "name": "drawables.cam",
            "type": "Drawable[]",
            "description": "The Drawables which will be used to represent the ARObject\n             in the camera view. <br/><br/> Drawables in the array will\n             be printed starting with the Drawable at position 0, causing\n             Drawables at later indices to overlap the previously drawn\n             Drawables. <br/><br/> <div class=\"paragraph\">Remark:</div><br/>\n             The array content\n             should not be manipulated via the [] operator, as it cannot\n             be guaranteed that the changes will be propagated through to\n             the native application. The property should only be\n             manipulated with arobject.drawables.addCamDrawable() and\n             arobject.drawables.removeCamDrawable(), or directly set with\n             arobject.drawables.cam = new Array(...);.",
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1313,
            "itemtype": "property",
            "name": "drawables.radar",
            "type": "Drawable2D[]",
            "description": "The Drawable2Ds which will be used to represent the ARObject\n             in the radar. The drawables will only show if AR.radar is\n             enabled and initialized with valid values.<br/><br/> Drawables in the array will\n             be printed starting with the Drawable at position 0, causing\n             Drawables at later indices to overlap the previously drawn\n             Drawables.\n             <br/><br/>\n             In the radar, 1 SDU is defined to be the radius of the radar. Thus,\n             if a Circle with radius 1 SDU is created, the circle will\n             take up the entire space of the radar. \n             <br/><br/> <div class=\"paragraph\">Remark:</div><br/>\n             The array content\n             should not be manipulated via the [] operator, as it cannot\n             be guaranteed that the changes will be propagated through to\n             the native application. The property should only be\n             manipulated with geoobject.drawables.addRadarDrawable() and\n             geoobject.drawables.removeRadarDrawable(), or directly set with\n             geoobject.drawables.radar = new Array(...);.\n             <br/><br/> <div class=\"paragraph\">Remark:</div><br/>\n             Clicks on the Drawable2Ds (Drawable.onClick) in the radar will not be handled. Assigning\n             a function to the click trigger of Drawable2Ds in the radar is allowed, however,\n             they will not be triggered. Refer to AR.radar.onClick() for event\n             handling on radar clicks.",
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1358,
            "itemtype": "property",
            "name": "drawables.indicator",
            "type": "Drawable2D[]",
            "description": "The Drawable2Ds which will be used to indicate the direction\n\t\t\t\twhere the GeoObject is located, in case the GeoObject is currently\n\t\t\t\tnot visible on the screen.<br/><br/> Drawables in the array will\n             be printed starting with the Drawable at position 0, causing\n             Drawables at later indices to overlap the previously drawn\n             Drawables.\n             <br/><br/>\n             The indicator Drawables will be rendered on the edge of the screen\n             and will move around the screen edges as the user is moving the\n             phone. For indicator Drawables, 1 SDU is defined to be the width of\n             the screen in landscape orientation. Thus, if an ImageDrawable with\n             width 0.5 SDUs is created, it will take up half the width of the screen.\n             <br/><br/>\n             As the indicator Drawables move around the edges of the screen, their x and\n             y orientation changes. Thus, the following behavior is defined for\n             any manipulation (offsetX, offsetY, rotation, scaling etc.) on the Drawable2D:\n             The manipulations are applied when the Drawable2D is located on the top\n             edge of the screen, horizontally centered. A positive offsetY, for example, make\n             the Drawable move further away from the top screen edge. As the Drawable moves\n             around the edges of the screen and is finally located on the left edge of the screen,\n             offsetY will still cause the drawable to be drawn further away from the left\n             edge of the screen. The offsetX setting behaves accordingly with left/right\n             shifting of the Drawable.\n             <br/><br/> <div class=\"paragraph\">Remark:</div><br/>\n             The array content\n             should not be manipulated via the [] operator, as it cannot\n             be guaranteed that the changes will be propagated through to\n             the native application. The property should only be\n             manipulated with geoobject.drawables.addIndicatorDrawable() and\n             geoobject.drawables.removeIndicatorDrawable(), or directly set with\n             geoobject.drawables.indicator = new Array(...);.\n             <br/><br/> <div class=\"paragraph\">Remark:</div><br/>\n             Clicks on the indicator Drawable2Ds (Drawable.onClick) will not be handled. Assigning\n             a function to the click trigger of Drawable2Ds used as indicators is allowed, however,\n             they will not be triggered.",
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1416,
            "itemtype": "method",
            "name": "drawables.addCamDrawable",
            "description": "Adds Drawables to the ARObject in the camera.",
            "params": [
                {
                    "name": "drawable",
                    "description": "The drawable(s) that should be added to the camera. Can either be a\n           single Drawable, or an Array of Drawables.",
                    "type": "Drawable|Drawable[]"
                },
                {
                    "name": "position",
                    "description": "The position where the Drawable should be added in the array. If\n           not specified, the Drawable will be added at the end of the\n           array. Must be a whole number.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1434,
            "itemtype": "method",
            "name": "drawables.removeCamDrawable",
            "description": "Removes Drawables from the ARObject in the cam.",
            "params": [
                {
                    "name": "drawable|position",
                    "description": "When a single Drawable or an Array of\n           Drawables is given, these Drawables will be removed from the\n           array. When an integer is given, the Drawable at the specified\n           position will be removed.",
                    "type": "Drawable|[Drawable]|Number"
                }
            ],
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1452,
            "itemtype": "method",
            "name": "drawables.addRadarDrawable",
            "description": "Adds Drawable2Ds to the GeoObject in the radar.",
            "params": [
                {
                    "name": "drawable",
                    "description": "The drawable(s) that should be added to the radar. Can either be a\n           single Drawable2D, or an Array of Drawable2Ds.",
                    "type": "Drawable2D|Array(Drawable2D)"
                },
                {
                    "name": "position",
                    "description": "The position where the Drawable2D should be added in the array. If\n           not specified, the Drawable2D will be added at the end of the\n           array. Must be a whole number.",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1474,
            "itemtype": "method",
            "name": "drawables.removeRadarDrawable",
            "description": "Removes Drawable2Ds from the GeoObject in the radar.",
            "params": [
                {
                    "name": "drawable|position",
                    "description": "When a single Drawable2D or an Array of\n           Drawable2Ds is given, these Drawable2Ds will be removed from the\n           array. When an integer is given, the Drawable2D at the specified\n           position will be removed.",
                    "type": "Drawable2D|Array(Drawable2D)|int"
                }
            ],
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1496,
            "itemtype": "method",
            "name": "drawables.addIndicatorDrawable",
            "description": "Adds Drawable2Ds as off-screen-indicators to the GeoObject.",
            "params": [
                {
                    "name": "drawable",
                    "description": "The drawable(s) that should be added. Can either be a\n           single Drawable2D, or an Array of Drawable2Ds.",
                    "type": "Drawable2D|Drawable2D[]"
                },
                {
                    "name": "position",
                    "description": "The position where the Drawable2D should be added in the array. If\n           not specified, the Drawable2D will be added at the end of the\n           array. Must be a whole number.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1518,
            "itemtype": "method",
            "name": "drawables.removeIndicatorDrawable",
            "description": "Removes Drawable2Ds as indicators from the GeoObject.",
            "params": [
                {
                    "name": "drawable|position",
                    "description": "When a single Drawable2D or an Array of\n           Drawable2Ds is given, these Drawable2Ds will be removed from the\n           array. When an integer is given, the Drawable2D at the specified\n           position will be removed.",
                    "type": "Drawable2D|Drawable2D[]|int"
                }
            ],
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1662,
            "itemtype": "property",
            "name": "enabled",
            "type": "boolean",
            "description": "Flag to enable/disable the Drawable. If the Drawable is\n             disabled, it will never appear on the screen and triggers on\n             this Drawable will never be fired. In case it is enabled, it\n             can be rendered on the screen and fire triggers.",
            "default": "true",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1696,
            "itemtype": "event",
            "name": "onClick",
            "description": "When the Drawable is clicked, the system will trigger\nDrawable.onClick(ARObject). A click on the screen might hit multiple\nDrawables, thus a click creates a \"clicked Drawables-queue\", with the\nuppermost Drawable in the front of the queue. The return value of the\nfunction determines if, after the onClick()-Function was\nexecuted for this Drawable, the queue shall continue to execute\nonClick() for the next Drawable in the queue. In case the last\nDrawable in the queue still requests to continue the click-queue,\nARObject.onClick() will be executed. If the queue still continues,\ncontext.onScreenClick() will be executed.\n\nThe return value of the function determines what happens next. If false, the click-queue should not stop with this Drawable.\n        Thus, the next Drawable's onClick() function will be\n        executed. This is the default value in case no return value is\n        set or the function is not defined for this Drawable. If true, the queue-execution will stop at the current\n        Drawable, underlying Drawables will not receive\n        onClick() calls.",
            "params": [
                {
                    "name": "arObject",
                    "description": "the ARObject the clicked Drawable is attached to.\n        \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onClick.",
                    "type": "ARObject"
                }
            ],
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1788,
            "itemtype": "property",
            "name": "rotate.roll",
            "type": "Number",
            "description": "Defines a rotation of the Drawable around the z-axis, specified in degrees. Values will be applied modulo 360.\nA value of 361 degrees has the same effect as setting the value to 1 degree.",
            "default": "0",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1813,
            "itemtype": "property",
            "name": "rotate.tilt",
            "type": "Number",
            "description": "Defines a rotation of the Drawable around the x-axis, specified in degrees. Values will be applied modulo 360.\nA value of 361 degrees has the same effect as setting the value to 1 degree.",
            "default": "0",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 1838,
            "itemtype": "property",
            "name": "rotate.heading",
            "type": "Number",
            "description": "Defines a rotation of the Drawable around the y-axis, specified in degrees. Values will be applied modulo 360.\nA value of 361 degrees has the same effect as setting the value to 1 degree.",
            "default": "0",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2024,
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "description": "The scale factor for the Drawable2D. A scale factor\n             greater than 1 enlarges the drawable, a scale factor less\n             than 1 shrinks it down. Only values greater than or equal to 0 are\n             allowed. A scale factor of 0 makes the Drawable2D invisible.\n             A scale factor of 2 doubles the size of the\n             Drawable2D, a scale factor of 0.5 halfs the size of the\n             Drawable2D. Scale will influence the BoundingRectangle of\n             the Drawable, but it will not influence the original\n             properties of the Drawable2D.",
            "default": "1",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2056,
            "itemtype": "property",
            "name": "rotation",
            "type": "Number",
            "description": "Defines the rotation of the Drawable, in degrees, with the\n             rotation axis perpendicular to the screen plain. For\n             example, setting rotation to 45.0 on a square plain image\n             turns it into a rhombus. A positive value defines a rotation\n             in clockwise direction, a negative value defines a rotation\n             in anti-clockwise direction. Rotation can influence the\n             BoundingRectangle of the Drawable (for example, when a\n             Rectangle is rotated).<br/><br/>\n             Note, rotation is applied in addition to any roll-tilt-heading rotations defined.\n             Rotation specifies the rotation on the screen, with the origin of the rotation\n             being the center of the Drawable2D, including any offsets etc.",
            "default": "0",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2090,
            "itemtype": "property",
            "name": "opacity",
            "type": "Number",
            "description": "A value within the interval from 0.0 to 1.0 defining the\n             opacity of the entire Drawable2D. A value of 0 indicates\n             full transparency, a value of 1 indicates full opacity.",
            "default": "1",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2116,
            "itemtype": "property",
            "name": "horizontalAnchor",
            "type": "Number",
            "description": "The horizontal anchor defines which pixel (in a horizontal\n             pixel row) of the Drawable2D will be placed right at the\n             screen position of the GeoObject represented by the\n             Drawable2D.<br/><br/>\n\nValid values are defined in AR.CONST.HORIZONTAL_ANCHOR. For example, if\nLEFT is set as horizontal anchor of an ImageDrawable, the image's left edge will\nmatch the calculated position of the Drawable2D.<br/><br/>\n\nThe default horizontal anchor points is dependent on the concrete class\nof the Drawable2D.",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2143,
            "itemtype": "property",
            "name": "verticalAnchor",
            "type": "Number",
            "description": "The vertical anchor defines which pixel (in a vertical pixel\n             column) of the Drawable2D will be placed right at the screen\n             position of the GeoObject represented by the Drawable2D.<br/><br/>\n\nValid values are defined in AR.CONST.VERTICAL_ANCHOR. For example, if TOP\nis set as horizontal anchor of an Image, the image's top edge will match\nthe calculated position of the Drawable2D.<br/><br/>\n\nThe default vertical anchor points is dependent on the concrete class of\nthe Drawable2D.",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2169,
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "description": "The horizontal offset to the calculated position of the\n             Drawable2D, in <a href=\"../modules/AR.html\">SDUs</a>. A positive offsetX causes the Drawable2D\n             to move right, a negative offsetX causes it to move left.",
            "default": "0",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2195,
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "description": "The vertical offset to the calculated position of the\n             Drawable2D, in <a href=\"../modules/AR.html\">SDUs</a>. A positive offsetY causes the Drawable2D\n             to move up, a negative offsetY causes it to move down.",
            "default": "0",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2221,
            "itemtype": "property",
            "name": "zOrder",
            "type": "Number",
            "description": "If multiple Drawable2Ds are assigned to a certain GeoObject, the zOrder defines the drawing order of these Drawables.\nIn case the Drawables overlap, the Drawable with the higher zOrder value is rendered on top of the others (e.g. a Drawable with\nzOrder 1 is rendered on top of a Drawable of zOrder 0, which again is rendered on top of -1).\nIn case Drawables have the same zOrder defined, and they overlap, the behavior is undefined and might cause unexpected results,\nthus it is good practice to define the zOrder for potentially overlapping Drawables.\n<br/><br/>\nTo specify the rendering order of the Drawables of different GeoObjects, refer to GeoObject.renderingOrder.\n<br/><br/>\nMust be a whole number.",
            "default": "0",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2260,
            "itemtype": "method",
            "name": "getBoundingRectangle",
            "description": "Returns the BoundingRectangle for this Drawable2D. In case\n             of an error, null will be returned.",
            "see": [
                "BoundingRectangle"
            ],
            "return": {
                "description": "the BoundingRectangle for the Drawable2D",
                "type": "BoundingRectangle"
            },
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2394,
            "itemtype": "property",
            "name": "text",
            "type": "string",
            "description": "The text of the label.",
            "class": "Label",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2409,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "description": "The height of the Label, in <a href=\"../modules/AR.html\">SDUs</a>. Effectively, this will\n             define the size of the Label.",
            "class": "Label",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2426,
            "itemtype": "property",
            "name": "style",
            "type": "{object}",
            "description": "The Style to be passed. Valid values are:",
            "class": "Label",
            "module": "AR",
            "subprops": [
                {
                    "name": "backgroundColor",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "textColor",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fontStyle",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2576,
            "itemtype": "property",
            "name": "uri",
            "type": "string",
            "description": "The uri pointing to the model file. This property is read-only and cannot be modified after creation.",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2599,
            "itemtype": "event",
            "name": "onLoaded",
            "description": "The trigger will fire when the Model file is successfully loaded.<br/><br/>\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onLoaded.",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2619,
            "itemtype": "event",
            "name": "onError",
            "description": "The trigger will fire when the Model file cannot be loaded.<br/><br/>\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onLoaded.",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2640,
            "itemtype": "method",
            "name": "isLoaded",
            "description": "Allows checking if the Model has already been loaded\n             successfully.",
            "return": {
                "description": "true if the Model is already loaded, false if the Model is not yet loaded.",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2699,
            "itemtype": "property",
            "name": "scale.x",
            "type": "Number",
            "description": "The scale in x-direction. Must be non-negative.",
            "default": "1",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2722,
            "itemtype": "property",
            "name": "scale.y",
            "type": "Number",
            "description": "The scale in y-direction. Must be non-negative.",
            "default": "1",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2745,
            "itemtype": "property",
            "name": "scale.z",
            "type": "Number",
            "description": "The scale in z-direction. Must be non-negative.",
            "default": "1",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2815,
            "itemtype": "property",
            "name": "translate.x",
            "type": "Number",
            "description": "The horizontal offset to the calculated position of the\n             Model, in <a href=\"../modules/AR.html\">SDUs</a>. A positive x causes the Model\n             to move right, a negative offsetX causes it to move left.",
            "default": "0",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2841,
            "itemtype": "property",
            "name": "translate.y",
            "type": "Number",
            "description": "The vertical offset to the calculated position of the\n             Model, in <a href=\"../modules/AR.html\">SDUs</a>. A positive y causes the Model\n             to move up, a negative offsetX causes it to move down.",
            "default": "0",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2867,
            "itemtype": "property",
            "name": "translate.z",
            "type": "Number",
            "description": "The depth-offset to the calculated position of the\n             Model, in <a href=\"../modules/AR.html\">SDUs</a>. A positive z causes the Model\n             to move towards the user, a negative offsetX causes it to move away.",
            "default": "0",
            "class": "Model",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 2998,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "description": "The radius of the Circle, in <a href=\"../modules/AR.html\">SDUs</a>. Must be a positive number.",
            "class": "Circle",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3021,
            "itemtype": "property",
            "name": "style",
            "type": "{object}",
            "description": "The Style object describing the style of the Circle.",
            "class": "Circle",
            "module": "AR",
            "subprops": [
                {
                    "name": "object.fillColor",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "object.outlineSize",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "object.outlineColor",
                    "description": "</ul>",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3127,
            "itemtype": "property",
            "name": "imageResource",
            "type": "ImageResource",
            "description": "The imageResource representing the ImageDrawable.",
            "class": "ImageDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3147,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "description": "The ImageDrawable's height in <a href=\"../modules/AR.html\">SDUs</a>. The width of the\n      ImageDrawable will be calculated accordingly based on the\n      aspect ratio of the underlying Image.",
            "class": "ImageDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3349,
            "itemtype": "event",
            "name": "onFinish",
            "description": "The trigger will fire when the AnimatedImageDrawable finishes.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onFinish.",
            "class": "AnimatedImageDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3371,
            "itemtype": "method",
            "name": "setKeyFrame",
            "description": "Stops any animation and sets the content of the\n             AnimatedImageDrawable to a still image that is at\n             position keyFrameNr in the key frame image array.\n             The keyFramePos will be clamped to valid positions\n             in the key frame image array in case the number\n             exceeds the available frames.",
            "params": [
                {
                    "name": "keyFramePos",
                    "description": "The position of the key frame in the\n           array.",
                    "type": "Int"
                }
            ],
            "class": "AnimatedImageDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3393,
            "itemtype": "method",
            "name": "animate",
            "description": "Starts the animation based on the key frames\n             provided.",
            "params": [
                {
                    "name": "keyFrames",
                    "description": "The keyframes that will be played one by\n           one. The numbers in the array will be clamped to the\n           available keyframes in the key frame image array. Must be an array of whole numbers.",
                    "type": "Number[]"
                },
                {
                    "name": "duration",
                    "description": "The duration of each keyframe in\n           milliseconds. Must be a whole number.",
                    "type": "Number"
                },
                {
                    "name": "loopTimes",
                    "description": "Defines how often the animation should be\n           played in a row. A negative value indicates an\n           infinite looping.<br/> The parameter is optional and\n           defaults to 1. Must be a whole number.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "AnimatedImageDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3451,
            "itemtype": "method",
            "name": "distanceTo",
            "description": "Returns the shortest distance (\"as the crow flies\")\n             to the Location passed as an argument, ignoring any altitude property.<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nvar location1 = new AR.GeoLocation(47.77317, 13.069929);\nvar location2 = new AR.GeoLocation(47.77317, 13.069929, 320.);\nvar location3 = new AR.GeoLocation(47.77317, 14.069929, 640.);\nvar dist = location2.distanceTo(location1); //dist = 0.\ndist = location2.distanceTo(location3); //dist = 74730.\n</pre>",
            "params": [
                {
                    "name": "location",
                    "description": "The Location the distance should be\n           calculated for.",
                    "type": "Location"
                }
            ],
            "return": {
                "description": "The numeric distance in meters.",
                "type": "Number"
            },
            "class": "Location",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3476,
            "itemtype": "method",
            "name": "distanceToUser",
            "description": "Returns the shortest distance (\"as the crow flies\")\n             to the current location of the user, ignoring any altitude property.<br/><br/>\n             If the current position of the user cannot be determined, undefined will be returned.",
            "return": {
                "description": "The numeric distance in meters.",
                "type": "Number"
            },
            "class": "Location",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3551,
            "itemtype": "property",
            "name": "latitude",
            "type": "Number",
            "description": "The latitude of the location, in decimal\n             degrees. Values must be numeric values in range\n             [-90, 90], otherwise, an Exception will be\n             thrown.",
            "class": "GeoLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3577,
            "itemtype": "property",
            "name": "longitude",
            "type": "Number",
            "description": "The longitude of the location, in decimal\n             degrees. Values must be numeric values in range\n             [-180, 180], otherwise, an Exception will be\n             thrown.",
            "class": "GeoLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3603,
            "itemtype": "property",
            "name": "altitude",
            "type": "Number",
            "description": "The altitude of the location, in meters. Values\n             must be numeric values, otherwise, an Exception\n             will be thrown.",
            "default": "AR.CONST.UNKNOWN_ALTITUDE",
            "class": "GeoLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3741,
            "itemtype": "property",
            "name": "location",
            "type": "Location",
            "description": "The location which is used as the reference point. If null is passed, the current position of the\n           \tuser is used as a reference point.",
            "class": "RelativeLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3767,
            "itemtype": "property",
            "name": "northing",
            "type": "Number",
            "description": "Specifies the number of meters the relative location is further north than the referenced location.\n           A negative value specifies the number of meters south.",
            "class": "RelativeLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3791,
            "itemtype": "property",
            "name": "easting",
            "type": "Number",
            "description": "Specifies the number of meters the relative location is further east than the referenced location.\n           A negative value specifies the number of meters west.",
            "class": "RelativeLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3815,
            "itemtype": "property",
            "name": "altitudeDelta",
            "type": "Number",
            "description": "Specifies the number of meters the relative location is higher (positive) or lower (negative)\n           than the referenced location. This is also applied when the altitude of the referenced location is unknown,\n           causing the relative location to definitely appear higher or lower then the referenced location.\n           If the property is set to null, 0 will be applied as the altitudeDelta.",
            "class": "RelativeLocation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 3969,
            "itemtype": "property",
            "name": "locations",
            "type": "Location[]",
            "description": "The array of Locations of the GeoObject. When a\n             single Location is set as location, it will\n             implicitly be transformed into an Array of\n             Locations with only one entry. Thus, the\n             following four statements have the same effect:\n\n<pre class=\"prettyprint\">\ngeoObject = new AR.GeoObject(location);\ngeoObject.locations = location;\ngeoObject.locations = new Array(location);\ngeoObject.locations = [ location ];\n</pre>",
            "class": "GeoObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4077,
            "itemtype": "property",
            "name": "enabled",
            "type": "boolean",
            "description": "Flag to enable/disable the ActionArea. If the\n             ActionArea is disabled, triggers on this\n             ActionArea will never be fired. In case it is\n             enabled, it can fire triggers.",
            "class": "ActionArea",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4097,
            "itemtype": "event",
            "name": "onEnter",
            "description": "The trigger is executed when the user enters the\n             ActionArea.<br/><br/>\n\nThe trigger is null by default, and will thus result in no\naction executed when the trigger fires. A developer can add\ncustom functionality by assigning a custom function to\nonEnter.",
            "class": "ActionArea",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4123,
            "itemtype": "event",
            "name": "onExit",
            "description": "The trigger is executed when the user leaves the\n             ActionArea.<br/><br/>\n\nThe trigger is null by default, and will thus result in no\naction executed when the trigger fires. A developer can add\ncustom functionality by assigning a custom function to\nonExit.",
            "class": "ActionArea",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4155,
            "itemtype": "method",
            "name": "isInArea",
            "description": "checks if a certain location is within this\n             ActionArea.",
            "params": [
                {
                    "name": "geoLocation",
                    "description": "the GeoLocation that should be checked.",
                    "type": "GeoLocation"
                }
            ],
            "return": {
                "description": "true if the geoLocation passed to the method is\n        within the ActionArea, false if the geoLocation passed to the method is not\n        in the ActionArea",
                "type": "Boolean"
            },
            "class": "ActionArea",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4252,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "description": "The radius of the ActionRange, in <a\n             href=\"../modules/AR.html\">SDUs</a>.",
            "class": "ActionRange",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4276,
            "itemtype": "property",
            "name": "location",
            "type": "Location",
            "description": "The Location object which defines the center of the\n             ActionRange",
            "class": "ActionRange",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4334,
            "itemtype": "method",
            "name": "getWidth",
            "description": "Returns the width of the Drawable2D, in <a href=\"../modules/AR.html\">SDUs</a>, after\n             applying translations on the Drawable2D. <br/><br/>\n             <div class=\"paragraph\">Important:</div> getWidth() does\n             not deliver the actual width of the Drawable2D on the\n             screen.",
            "return": {
                "description": "The width of the BoundingRectangle in SDUs.",
                "type": "Number"
            },
            "class": "BoundingRectangle",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4347,
            "itemtype": "method",
            "name": "getHeight",
            "description": "Returns the height of the Drawable2D, in <a href=\"../modules/AR.html\">SDUs</a>, after\n             applying translations on the Drawable2D. <br/><br/>\n             <div class=\"paragraph\">Important:</div> getHeight()\n             does not deliver the actual height of the Drawable2D on\n             the screen.",
            "return": {
                "description": "The height of the BoundingRectangle in SDUs.",
                "type": "Number"
            },
            "class": "BoundingRectangle",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4424,
            "itemtype": "event",
            "name": "onLoaded",
            "description": "The trigger will fire when the Image file was loaded.<br/><br/>The trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality by assigning a custom function to onLoaded.",
            "params": [
                {
                    "name": "width",
                    "description": "the width of the ImageResource, in pixels.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "the height of the ImageResource, in pixels.",
                    "type": "Number"
                }
            ],
            "class": "ImageResource",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4439,
            "itemtype": "event",
            "name": "onError",
            "description": "The trigger will fire when the Image file could not be loaded.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onError.",
            "class": "ImageResource",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4455,
            "itemtype": "method",
            "name": "getUri",
            "description": "Returns the uri to the ImageResource.",
            "return": {
                "description": "the uri to the ImageResource.",
                "type": "String"
            },
            "class": "ImageResource",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4491,
            "itemtype": "method",
            "name": "getWidth",
            "description": "Returns the width of the original image, in pixels. In case\n             the image is not yet loaded (see ImageResource.onLoaded(),\n             -1 will be returned.",
            "return": {
                "description": "the width of the image represented through the URI, in\n        pixels.",
                "type": "Number"
            },
            "class": "ImageResource",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4503,
            "itemtype": "method",
            "name": "getHeight",
            "description": "Returns the height of the original image, in pixels. In case\n             the image is not yet loaded (see ImageResource.onLoaded(),\n             -1 will be returned.",
            "return": {
                "description": "the height of the image represented through the URI, in\n        pixels.",
                "type": "Number"
            },
            "class": "ImageResource",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4514,
            "itemtype": "method",
            "name": "isLoaded",
            "description": "Allows checking if the ImageResource has already been loaded\n             successfully.",
            "return": {
                "description": "true if the ImageResource is already loaded, false if the ImageResource is not yet loaded.",
                "type": "Boolean"
            },
            "class": "ImageResource",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4548,
            "itemtype": "event",
            "name": "onStart",
            "description": "The trigger will fire right before the Animation starts.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onStart.",
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4568,
            "itemtype": "event",
            "name": "onFinish",
            "description": "The trigger will fire when the Animation finishes.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onFinish.",
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4596,
            "itemtype": "method",
            "name": "isRunning",
            "description": "Checks if the Animation is currently running.",
            "return": {
                "description": "true if the Animation is currently running, false if the Animation is currently not running.",
                "type": "Boolean"
            },
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4607,
            "itemtype": "method",
            "name": "start",
            "description": "Immediately starts the Animation.",
            "params": [
                {
                    "name": "loopTimes",
                    "description": "Defines how often the animation should be played.\n           A negative value indicates an infinite looping. Must be a whole number.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4628,
            "itemtype": "method",
            "name": "stop",
            "description": "Immediately stops the Animation. Allows manual\n             stopping of the Animation before the animation would\n             automatically stop. The onFinish-trigger will not be fired\n             after a manual stopping.",
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4645,
            "itemtype": "method",
            "name": "pause",
            "description": "Pauses the Animation.<br/>\nIf the PropertyAnimation is currently not running, the call will have no effect.",
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 4656,
            "itemtype": "method",
            "name": "resume",
            "description": "Resumes the Animation.<br/>\nIf the PropertyAnimation is currently running, the call has no effect. Otherwise, it will either be resumed from the position where it was last paused,\nor will start from the beginning if it was not paused.",
            "class": "Animation",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5176,
            "itemtype": "property",
            "name": "state",
            "type": "Number",
            "description": "The state the Sound object is currently in. The property\n             is read-only and will be modified by the system. Custom\n             modifications will result in an exception. Valid values\n             are defined in AR.CONST.STATE",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5194,
            "itemtype": "event",
            "name": "onLoaded",
            "description": "The trigger will fire when the Sound file changed its state from\n             LOADING to LOADED.<br/><br/>\n                \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onLoaded.",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5215,
            "itemtype": "event",
            "name": "onFinishedPlaying",
            "description": "The trigger will fire when the Sound file changed its state from\n             PLAYING to either LOADED or INITIALIZED.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onFinishedPlaying.",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5236,
            "itemtype": "event",
            "name": "onError",
            "description": "The trigger will fire when the Sound file changed its state to\n             ERROR.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onError.",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5275,
            "itemtype": "method",
            "name": "play",
            "description": "Plays the sound file.",
            "params": [
                {
                    "name": "loopTimes",
                    "description": "Defines how often the sound file should be played in a row.\n           A negative value indicates an infinite looping.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5296,
            "itemtype": "method",
            "name": "stop",
            "description": "Stops playing this sound file. If play() was called multiple\n\t\t\t\ttimes on the same file, stop() will stop every running playback\n\t\t\t\tof this file. onFinishedPlaying() will not be triggered after\n\t\t\t\tstop() has been called.",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5306,
            "itemtype": "method",
            "name": "pause",
            "description": "Pauses playing this sound file. To resume from the time the file was\npaused, call resume(). If play() is called on a paused file, the play will start\nfrom the very beginning.",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5315,
            "itemtype": "method",
            "name": "resume",
            "description": "Allows a paused sound file to resume playing from the time the file was paused.\nIn any other cases, resume() has the same effect as calling play(1).",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5323,
            "itemtype": "method",
            "name": "load",
            "description": "Initiate the loading process of the sound file. The loaded\n             file will be stored on the device for immediate playing (and\n             thus will use system ressources). It is good practice to\n             destroy (sound.destroy()) the sound files when they are no\n             longer needed (for example in context.onExit()).",
            "class": "Sound",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5407,
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "string",
            "default": "#00000000 (transparent)",
            "description": "The background color of the Drawable. Can be passed\n             as hexadecimal RGB or RGBA values (see <a\n             href=\"http://en.wikipedia.org/wiki/RGBA\">here</a>\n             for details on RGBA colorcoding). In case RGB is\n             used, the alpha value is set to full opacity.",
            "class": "Style",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5421,
            "itemtype": "property",
            "name": "fillColor",
            "type": "string",
            "default": "#000000FF (solid black)",
            "description": "The fill color of the Drawable. Can be passed as\n             hexadecimal RGB or RGBA values (see <a\n             href=\"http://en.wikipedia.org/wiki/RGBA\">here</a>\n             for details on RGBA colorcoding). In case RGB is\n             used, the alpha value is set to full opacity.",
            "class": "Style",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5435,
            "itemtype": "property",
            "name": "outlineSize",
            "type": "Number",
            "default": "0",
            "description": "Defines the thickness of an outline which is printed\n             from the boundary of the Drawable towards the\n             inside.<br/><br/>\n\nValid values are in the range between 0 and 128. A value of 0\nmeans no outline, a value of 128 covers the entire Drawable. Must be a whole number<br/><br/>\n\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nvar circle = new AR.Circle(20, {\n&nbsp;&nbsp;style : {\n&nbsp;&nbsp;&nbsp;&nbsp;fillColor : '#FFFFFF', //white circle\n&nbsp;&nbsp;&nbsp;&nbsp;outlineColor : '#000000' //black outline\n&nbsp;&nbsp;}\n});\n<br/>\ncircle.style.outlineSize = 0; //no outline, circle appears fully white\ncircle.style.outlineSize = 128; //outline fully covers the circle, circle appears fully black\ncircle.style.outlineSize = 90; //circle appears half black (outer area), half white (inner area)\n</pre>",
            "class": "Style",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5465,
            "itemtype": "property",
            "name": "outlineColor",
            "type": "string",
            "default": "#00000000 (transparent)",
            "description": "The fill color of the outline bounding the Drawable.\n             Can be passed as hexadecimal RGB or RGBA values (see\n             <a href=\"http://en.wikipedia.org/wiki/RGBA\">here</a>\n             for details on RGBA colorcoding). In case RGB is\n             used, the alpha value is set to full opacity.",
            "class": "Style",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5479,
            "itemtype": "property",
            "name": "fontStyle",
            "type": "string",
            "default": "AR.CONST.FONT_STYLE.NORMAL",
            "description": "The font style of the text. Valid values are\n             specified in AR.CONST.FONT_STYLE.",
            "class": "Style",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5489,
            "itemtype": "property",
            "name": "textColor",
            "type": "string",
            "default": "#000000FF (solid black)",
            "description": "The text color. Can be passed as hexadecimal RGB or\n             RGBA values (see <a\n             href=\"http://en.wikipedia.org/wiki/RGBA\">here</a>\n             for details on RGBA colorcoding). In case RGB is\n             used, the alpha value is set to full opacity.",
            "class": "Style",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5563,
            "itemtype": "property",
            "name": "LOCATION_ACCURACY",
            "type": "object",
            "description": "The level of accuracy of a location reported back from the\n             system. The property holds various accuracy levels as int\n             properties.<br/><br/>\n\nThe following accuracy levels are defined:\n<ul>\n<li>HIGH - the reported location is very accurate with a potential\ninaccuracy of up to 10 meters</li>\n<li>MEDIUM - the reported location is fairly accurate with a potential\ninaccuracy between 10 and 35 meters</li>\n<li>LOW - the reported location is inaccurate with a potential\ninaccuracy of more than 35 meters</li>\n</ul>\n\nOne can access it by writing e.g. AR.CONST.LOCATION_ACCURACY.LOW",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5587,
            "itemtype": "property",
            "name": "UNKNOWN_ALTITUDE",
            "type": "Number",
            "description": "The value indicating that the altitude is unknown or cannot\n             be fetched.<br/><br/>\n\nIt is set to -32768 meters. This altitude-level is impossible on the\nearth's surface.<br/><br/>\n\nIn case a GeoLocation has set its altitude to UNKNOWN_ALTITUDE, the true\naltitude will be assumed to be on the same altitude level as the user.",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5600,
            "itemtype": "property",
            "name": "HORIZONTAL_ANCHOR",
            "type": "object",
            "description": "The property holds various horizontal anchors as int\n             properties.<br/><br/>\n\nThe following horizontal anchors are defined:\n<ul>\n<li>LEFT</li>\n<li>CENTER</li>\n<li>RIGHT</li>\n</ul>\n\nOne can access it by writing e.g. AR.CONST.HORIZONTAL_ANCHOR.LEFT",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5642,
            "itemtype": "property",
            "name": "VERTICAL_ANCHOR",
            "type": "object",
            "description": "The property holds various vertical anchors as int\n             properties.<br/><br/>\n\nThe following vertical anchors are defined:\n<ul>\n<li>TOP</li>\n<li>MIDDLE</li>\n<li>BOTTOM</li>\n</ul>\n\nOne can access it by writing e.g. AR.CONST.VERTICAL_ANCHOR.TOP",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5684,
            "itemtype": "property",
            "name": "EASING_CURVE_TYPE",
            "type": "object",
            "description": "The property holds various easing curve types as string\n             properties.<br/><br/>\n\nThe following Easing Curve types are defined:<br/>\n<table>\n<tr><td><b>Constant<b></td><td><b>String Representation</b></td></tr>\n<tr><td>LINEAR</td><td>linear</td></tr>\n<tr><td>EASE_IN_QUAD</td><td>easeInQuad</td></tr>\n<tr><td>EASE_OUT_QUAD</td><td>easeOutQuad</td></tr>\n<tr><td>EASE_IN_OUT_QUAD</td><td>easeInOutQuad</td></tr>\n<tr><td>EASE_OUT_IN_QUAD</td><td>easeOutInQuad</td></tr>\n<tr><td>EASE_IN_CUBIC</td><td>easeInCubic</td></tr>\n<tr><td>EASE_OUT_CUBIC</td><td>easeOutCubic</td></tr>\n<tr><td>EASE_IN_OUT_CUBIC</td><td>easeInOutCubic</td></tr>\n<tr><td>EASE_OUT_IN_CUBIC</td><td>easeOutInCubic</td></tr>\n<tr><td>EASE_IN_QUAT</td><td>easeInQuat</td></tr>\n<tr><td>EASE_OUT_QUAT</td><td>easeOutQuat</td></tr>\n<tr><td>EASE_IN_OUT_QUAT</td><td>easeInOutQuat</td></tr>\n<tr><td>EASE_OUT_IN_QUAT</td><td>easeOutInQuat</td></tr>\n<tr><td>EASE_IN_QUINT</td><td>easeInQuint</td></tr>\n<tr><td>EASE_OUT_QUINT</td><td>easeOutQuint</td></tr>\n<tr><td>EASE_IN_OUT_QUINT</td><td>easeInOutQuint</td></tr>\n<tr><td>EASE_OUT_IN_QUINT</td><td>easeOutInQuint</td></tr>\n<tr><td>EASE_IN_ELASTIC</td><td>easeInElastic</td></tr>\n<tr><td>EASE_OUT_ELASTIC</td><td>easeOutElastic</td></tr>\n<tr><td>EASE_IN_OUT_ELASTIC</td><td>easeInOutElastic</td></tr>\n<tr><td>EASE_OUT_IN_ELASTIC</td><td>easeOutInElastic</td></tr>\n<tr><td>EASE_IN_BACK</td><td>easeInBack</td></tr>\n<tr><td>EASE_OUT_BACK</td><td>easeOutBack</td></tr>\n<tr><td>EASE_IN_OUT_BACK</td><td>easeInOutBack</td></tr>\n<tr><td>EASE_OUT_IN_BACK</td><td>easeOutInBack</td></tr>\n<tr><td>EASE_IN_SINE</td><td>easeInSine</td></tr>\n<tr><td>EASE_OUT_SINE</td><td>easeOutSine</td></tr>\n<tr><td>EASE_IN_OUT_SINE</td><td>easeInOutSine</td></tr>\n<tr><td>EASE_OUT_IN_SINE</td><td>easeOutInSine</td></tr>\n<tr><td>EASE_IN_EXPO</td><td>easeInExpo</td></tr>\n<tr><td>EASE_OUT_EXPO</td><td>easeOutExpo</td></tr>\n<tr><td>EASE_IN_OUT_EXPO</td><td>easeInOutExpo</td></tr>\n<tr><td>EASE_OUT_IN_EXPO</td><td>easeOutInExpo</td></tr>\n<tr><td>EASE_IN_CIRC</td><td>easeInCirc</td></tr>\n<tr><td>EASE_OUT_CIRC</td><td>easeOutCirc</td></tr>\n<tr><td>EASE_IN_OUT_CIRC</td><td>easeInOutCirc</td></tr>\n<tr><td>EASE_OUT_IN_CIRC</td><td>easeOutInCirc</td></tr>\n<tr><td>EASE_IN_BOUNCE</td><td>easeInBounce</td></tr>\n<tr><td>EASE_OUT_BOUNCE</td><td>easeOutBounce</td></tr>\n<tr><td>EASE_IN_OUT_BOUNCE</td><td>easeInOutBounce</td></tr>\n<tr><td>EASE_OUT_IN_BOUNCE</td><td>easeOutInBounce</td></tr>\n<tr><td>EASE_IN_CURVE</td><td>easeInCurve</td></tr>\n<tr><td>EASE_OUT_CURVE</td><td>easeOutCurve</td></tr>\n</table><br/>\n\nA detailed description on the various easing curve types are described\n<a href=\"http://doc.qt.nokia.com/solutions/4/qtanimationframework/qteasingcurve.html\">here</a>.\n\nOne can access it by writing e.g. AR.CONST.EASING_CURVE_TYPE.LINEAR",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5838,
            "itemtype": "property",
            "name": "ANIMATION_GROUP_TYPE",
            "type": "object",
            "description": "The property holds various animation group types as string\n             properties.<br/><br/>\n\nThe following Animation Group types are defined:<br/>\n<table>\n<tr><td><b>Constant<b></td><td><b>String Representation</b></td></tr>\n<tr><td>PARALLEL</td><td>parallel</td></tr>\n<tr><td>SEQUENTIAL</td><td>sequential</td></tr>\n</table><br/>\n\nOne can access it by writing e.g. AR.CONST.ANIMATION_GROUP_TYPE.PARALLEL",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5866,
            "itemtype": "property",
            "name": "FONT_STYLE",
            "type": "object",
            "description": "The property holds various font styles as string properties.<br/><br/>\n\nThe following font styles are defined:\n<ul>\n<li>NORMAL</li>\n<li>BOLD</li>\n<li>ITALIC</li>\n</ul>\n\nOne can access it by writing e.g. AR.CONST.FONT_STYLE.NORMAL",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5907,
            "itemtype": "property",
            "name": "STATE",
            "type": "object",
            "description": "The property holds various states as int properties.<br/><br/>\n\nThe following states are defined:\n<ul>\n<li>INITIALIZED - The object is initialized, but no data is loaded.</li>\n<li>LOADING - The data is currently being loaded.</li>\n<li>LOADED - The data is loaded.</li>\n<li>PLAYING - The file is currently being played.</li>\n<li>ERROR - The file cannot be loaded or played. This can have various\nreasons, including the data not being fetchable, the file being corrupt\netc.</li>\n</ul>\n\nOne can access it by writing e.g. AR.CONST.STATE.INITIALIZED",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 5951,
            "itemtype": "property",
            "name": "CLICK_BEHAVIOR",
            "type": "object",
            "description": "The different click behaviors available\n\nThe following click behaviors are defined:\n<ul>\n<li>CLICK</li>\n<li>TOUCH_UP</li>\n<li>TOUCH_DOWN</li>\n</ul>\n\nSee AR.context.clickBehavior for details.",
            "class": "CONST",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6009,
            "itemtype": "event",
            "name": "onLocationChanged",
            "description": "The function will be called as soon as\n<ul>\n<li>the location is fetched the first time, or</li>\n<li>the location of the user changes.</li>\n</ul>\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onLocationChanged.",
            "params": [
                {
                    "name": "latitude",
                    "description": "the current latitude of the user, based on WGS84",
                    "type": "Number"
                },
                {
                    "name": "longitude",
                    "description": "the current longitude of the user, based on\n           WGS84",
                    "type": "Number"
                },
                {
                    "name": "altitude",
                    "description": "the current altitude of the user, based on WGS84",
                    "type": "Number"
                },
                {
                    "name": "accuracy",
                    "description": "The accuracy of the reported location, see\n           AR.CONST.LOCATION_ACCURACY for details",
                    "type": "Number"
                }
            ],
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6030,
            "itemtype": "event",
            "name": "onScreenClick",
            "description": "Executed when the user clicks on the screen, no HTML\n             element was hit and either\n             <ul>\n             <li>no Drawable was hit on the click, or</li>\n             <li>Drawables were hit on the click, but even the last\n             Drawable in the click queue returned false in its\n             onClick trigger.</li>\n             </ul>\n\nSee AR.Drawable.onClick() for details on the click-queue.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6045,
            "itemtype": "method",
            "name": "destroyAll",
            "description": "Destroys all objects.\n\nSee AR.ARchitectObject.destroy() for effects of this call.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6061,
            "itemtype": "property",
            "name": "clickBehavior",
            "type": "string",
            "description": "clickBehavior controls what should be considered a click. The following options are available:<br/><br/>\n<ul>\n <li><b>AR.CONST.CLICK_BEHAVIOR.CLICK</b>: the platform considers a click only when the user presses and\n releases the screen at the same screen region. The click is fired after the user releases the finger from the screen</li>\n <li><b>AR.CONST.CLICK_BEHAVIOR.TOUCH_DOWN</b>: click fires as soon as the user touches the screen</li>\n <li><b>AR.CONST.CLICK_BEHAVIOR.TOUCH_UP</b>: click fires as soon as the user puts the finger off the screen, regardless of where the user started the touch on the screen.</li>\n</ul>",
            "default": "AR.CONST.CLICK_BEHAVIOR.CLICK",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6126,
            "itemtype": "property",
            "name": "versionNumber",
            "type": "String",
            "description": "Returns the Wikitude SDK version number.\n\t\t\t\tThe string is formatted in a dot notation with a major, minor and bugfix part. E.g. 4.0.0",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6149,
            "itemtype": "property",
            "name": "services.camera",
            "type": "boolean",
            "default": "true",
            "description": "Controls if the camera is active or not.<br/><br/>\nIf the property is set to true, the camera is visible on the screen, and computer vision components are activated.\nIf the property is set to false, the camera will be disabled, a black background will be visible and computer\nvision components are specifically deactivated.<br/><br/>\n\nIt is recommended to disable the camera service temporarily when fullscreen HTML is shown. This reduces\npower consumption and increases performance.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6173,
            "itemtype": "property",
            "name": "services.sensors",
            "type": "boolean",
            "default": "true",
            "description": "Controls if the sensors are active or not. Sensors include GPS, mangetometer, accelerometer and gyroscope.<br/><br/>\nIf the property is set to true, any geo-related components (such as GeoObjects and ActionRanges) are active.\nIf the property is set to false, any geo-related components will not be visible on the screen, and triggers will not fire.<br/><br/>\n\nIt is recommended to disable the sensors service when only computer vision components are used. This reduces\npower consumption and increases performance.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6222,
            "itemtype": "property",
            "name": "scene.minScalingDistance",
            "type": "Number",
            "default": "10",
            "description": "The distance, in meters, at which objects will start to appear smaller on the screen when the user moves further away.\nIf the user is closer than minScalingDistance, the object will not appear any bigger than the size it took on at minScalingDistance. Must be a positive whole number.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6237,
            "itemtype": "property",
            "name": "scene.maxScalingDistance",
            "type": "Number",
            "default": "20000",
            "description": "The distance, in meters, at which objects will keep their size on the screen even when the user moves further away.\nIf the user is further than maxScalingDistance, the object will not appear any smaller than the size it took on at maxScalingDistance. Must be a positive whole number.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6252,
            "itemtype": "property",
            "name": "scene.scalingFactor",
            "type": "Number",
            "default": "0.1",
            "description": "The amount of scaling that is applied between minScalingDistance and maxScalingDistance.\nThe scalingFactor controls the size the object takes on at maxScalingDistance, in percentage of the size it took on at minScalingDistance.<br/><br/>\n\nMust be in the range of [0,1].<br/><br/>\n\nSet the scalingFactor to 1 if no scaling should be applied for the objects.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6280,
            "itemtype": "property",
            "name": "scene.globalScale",
            "type": "float",
            "default": "1.0",
            "description": "The amount of scaling that is applied to all drawables in the scene. Use this value to alter the drawable size on different devices so that the world appears in a common look when running on different devices.<br/><br/>\n\nMust be in the range of [-1, MAX_FLOAT].<br/><br/>\n\nSetting the global scale to 0 will scale all drawables to a size of 0.<br/>\nSetting the global scale to -1 indicates that the SDK should calculate the value by itself, so that all drawables are equal in pixel size among different devices.\n\n<b>Automatic Scaling</b><br/>\nThe reference device is a 4 inch iPhone screen (e.g. iPhone 5). All other devices will adjust there global scale so that drawables will appear in the size as if the world would run on the reference device.</br>",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6306,
            "itemtype": "property",
            "name": "scene.cullingDistance",
            "type": "Number",
            "default": "50000",
            "description": "The maximum distance at which objects are visible in the scene, in meters. If an object's distance to the user is further than the culling distance,\nthe object will not be visible in the scene. Must be a positive whole number.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6340,
            "itemtype": "property",
            "name": "hardware.flashlight",
            "type": "Boolean",
            "default": "false",
            "description": "Turns the device flashlight on or off. Use the isFlashlightAvailable property to check if the device has a flashlight or not. If the device has no flashlight and the property is set to true, this will have no effect.",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6360,
            "itemtype": "property",
            "name": "hardware.flashlightAvailable",
            "type": "Boolean",
            "default": "false",
            "description": "true if the device has a flashlight, false otherwise. <br/><br/>\n\nNote that the following permissions are required on Android: <br/><br/>\n&lt;uses-permission android:name=\"android.permission.FLASHLIGHT\"/&gt; <br/>\n&lt;uses-feature android:name=\"android.hardware.camera.flash\" /&gt;",
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6391,
            "itemtype": "method",
            "name": "startVideoPlayer",
            "description": "Starts the native video player and plays the video at the\n             specified URI. Will close the video player automatically when\n             the video finished.",
            "params": [
                {
                    "name": "uri",
                    "description": "the uri to the video",
                    "type": "String"
                }
            ],
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6412,
            "itemtype": "method",
            "name": "openInBrowser",
            "description": "Opens the specified url in the native Browser.\nIf forceNativeBrowser is true, the URL will be opened\nin the native browser (e.g. Safari on iOS), otherwise it will be opened\nin a new webview.",
            "params": [
                {
                    "name": "url",
                    "description": "the url to be opened",
                    "type": "String"
                },
                {
                    "name": "forceNativeBrowser",
                    "description": "open URL in native browser (true) or in\n           a webview within the application (false).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "context",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6492,
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The error message to be logged.",
                    "type": "String"
                }
            ],
            "description": "Will log an error message to the console.",
            "class": "logger",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6500,
            "itemtype": "method",
            "name": "warning",
            "params": [
                {
                    "name": "message",
                    "description": "The warning message to be logged.",
                    "type": "String"
                }
            ],
            "description": "Will log a warning message to the console.",
            "class": "logger",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6508,
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "message",
                    "description": "The info message to be logged.",
                    "type": "String"
                }
            ],
            "description": "Will log an info message on the console.",
            "class": "logger",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6516,
            "itemtype": "method",
            "name": "debug",
            "params": [
                {
                    "name": "message",
                    "description": "The debug message to be logged.",
                    "type": "String"
                }
            ],
            "description": "Will log a debug message on the console.",
            "class": "logger",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6557,
            "itemtype": "method",
            "name": "activateDebugMode",
            "description": "Calling this function enables the debug console.\nA button will appear on the bottom of the screen, allowing the\ndeveloper to open the debug console.",
            "class": "logger",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6663,
            "itemtype": "property",
            "name": "enabled",
            "type": "boolean",
            "description": "enabled set to true enables the radar in the view, setting\n             it to false disables it entirely.<br/><br/> <b>Remark:</b>\n             The radar can only be displayed if all properties (the only\n             exception being the northIndicator) is set to a valid value.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6679,
            "itemtype": "property",
            "name": "background",
            "type": "ImageResource",
            "description": "Specifies the background of the radar.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6692,
            "itemtype": "property",
            "name": "centerX",
            "type": "Number",
            "description": "Specifies the horizontal position of the center of the actual radar area. The value\nmust be between 0 and 1 and specifies the center of the radar area with regards to the width of the background image.\nA value of 0.5 places the center of the radar area horizontally in the middle of the radar background image.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6707,
            "itemtype": "property",
            "name": "centerY",
            "type": "Number",
            "description": "Specifies the vertical position of the center of the actual radar area. The value\nmust be between 0 and 1 and specifies the center of the radar area with regards to the height of the background image.\nA value of 0.5 places the center of the radar area vertically in the middle of the radar background image.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6722,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "description": "Specifies the radius of the actual radar area. The radar drawables will not be visible beyond that radius.\nThe value must be between 0 and 1 and specifies the radius with regards to the width of the background image.\nA value of 0.4 scales the radius of the actual radar area to 40% of the entire width of the radar background image.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6737,
            "itemtype": "property",
            "name": "container",
            "type": "Element",
            "description": "the DOM-element that contains the radar",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6750,
            "itemtype": "property",
            "name": "maxDistance",
            "type": "Number",
            "description": "Specifies the maximum distance in meters that is covered in the radar. When set to x meters, only\nGeoObjects with a distance less or equal to x will be drawn in the radar. If the distance to a certain drawable is\nx, the drawable will be drawn on the boundary of the radar.<br/><br/>\nThe value must either be positive, or undefined. In this case, maxDistance will automatically be calculated as\nthe maximum distance of the GeoObjects in the scene, causing all GeoObjects to be visible in the radar.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6775,
            "itemtype": "event",
            "name": "onClick",
            "description": "The trigger fires when the radar (the area taken up by the background image) has been clicked.<br/><br/>",
            "deprecated": true,
            "deprecationMessage": "Use container.onclick instead\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onClick.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6793,
            "itemtype": "method",
            "name": "notifyUpdateRadarPosition",
            "description": "Whenever the position of the DOM element containing the radar has changed, this method must be called.\nIt will synchronize the radar's position with the DOM element.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6832,
            "itemtype": "property",
            "name": "northIndicator.image",
            "type": "ImageResource",
            "description": "Specifies the ImageResource used to indicate true north in the radar. The north indicator will be scaled\nwith the same ratio as the radar background image is scaled, refer radar.width for details.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6846,
            "itemtype": "property",
            "name": "northIndicator.radius",
            "type": "Number",
            "description": "Specifies the radius of the north indicator.\nAs the north indicator moves as soon as the user starts turning around, northIndicator.radius indicates the distance\nof the north indicator image to the center of the radar area. \nThe value must be between 0 and 1 and specifies the radius with regards to the width of the radar background image.\nA value of 0.45 scales the radius of the actual radar area to 45% of the entire width of the radar background image.\n<br/><br/>\nIt is good practice to set the radius of the north indicator to a slightly higher value that the radar's radius.\nThis allows the north indicator to not overlap with the radar area.",
            "class": "radar",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6968,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "description": "The VideoDrawable's height in <a href=\"../modules/AR.html\">SDUs</a>. The width of the\n      VideoDrawable will be calculated accordingly based on the\n      aspect ratio of the playing video.",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 6994,
            "itemtype": "event",
            "name": "onLoaded",
            "description": "The trigger will fire when the Video file was loaded.<br/><br/>The trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality by assigning a custom function to onLoaded.",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7012,
            "itemtype": "event",
            "name": "onPlaybackStarted",
            "description": "The trigger will fire just before the Video file starts playing.<br/><br/>The trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality by assigning a custom function to onPlaybackStarted.",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7030,
            "itemtype": "event",
            "name": "onFinishedPlaying",
            "description": "The trigger will fire just after the Video file finished playing.<br/><br/>The trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality by assigning a custom function to onFinishedPlaying.",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7048,
            "itemtype": "event",
            "name": "onError",
            "description": "The trigger will fire when the Video file cannot be loaded or played.<br/><br/>The trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality by assigning a custom function to onError.",
            "params": [
                {
                    "name": "msg",
                    "description": "The detailed error description.",
                    "type": "String"
                }
            ],
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7066,
            "itemtype": "method",
            "name": "getUri",
            "description": "Returns the URI the VideoDrawable is pointing to",
            "return": {
                "description": "the URI, as set at creation time.",
                "type": "String"
            },
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7074,
            "itemtype": "method",
            "name": "isTransparent",
            "description": "Returns whether the VideoDrawable has the transparent flag set",
            "return": {
                "description": "The isTransparent setting.",
                "type": "Boolean"
            },
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7127,
            "itemtype": "method",
            "name": "play",
            "description": "Plays the video.",
            "params": [
                {
                    "name": "loopTimes",
                    "description": "Defines how often the video should be played in a row.\n           A negative value indicates an infinite looping.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7140,
            "itemtype": "method",
            "name": "pause",
            "description": "Pauses playing this video. To resume from the time the file was\npaused, call resume(). If play() is called on a paused file, the play will start\nfrom the very beginning.",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7152,
            "itemtype": "method",
            "name": "resume",
            "description": "Allows a paused video to resume playing from the time the file was paused.\nIn any other cases, resume() has the same effect as calling play(1).",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7163,
            "itemtype": "method",
            "name": "stop",
            "description": "Stops playing this video. onFinishedPlaying() will not be triggered after\n\t\t\t\tstop() has been called.",
            "class": "VideoDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7175,
            "itemtype": "property",
            "name": "scaling",
            "deprecated": true,
            "deprecationMessage": "Use scale instead.",
            "type": "Number",
            "class": "Drawable2D",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7235,
            "itemtype": "event",
            "name": "triggers.onClick",
            "deprecated": true,
            "deprecationMessage": "Use onClick instead.",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7281,
            "itemtype": "property",
            "name": "roll",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use rotate.roll instead.",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7293,
            "itemtype": "property",
            "name": "tilt",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use rotate.tilt instead.",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7305,
            "itemtype": "property",
            "name": "heading",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use rotate.heading instead.",
            "class": "Drawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7318,
            "itemtype": "event",
            "name": "triggers.onEnterFieldOfVision",
            "deprecated": true,
            "deprecationMessage": "Use onEnterFieldOfVision instead.",
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7323,
            "itemtype": "event",
            "name": "triggers.onExitFieldOfVision",
            "deprecated": true,
            "deprecationMessage": "Use onExitFieldOfVision instead.",
            "class": "ARObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7380,
            "itemtype": "property",
            "name": "geoLocation",
            "type": "GeoLocation",
            "deprecated": true,
            "deprecationMessage": "Use location instead.",
            "class": "ActionRange",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7395,
            "itemtype": "property",
            "name": "positionX",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use container instead",
            "description": "Specifies the position of the left edge of the radar background image. The value\nmust be between 0 and 1. A value of 0 places the left edge of the radar background image on the left edge of the screen, 0.5\nplaces the left edge horizontally in the middle of the screen.",
            "class": "ActionRange",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7411,
            "itemtype": "property",
            "name": "positionY",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use container instead",
            "description": "Specifies the position of the top edge of the radar background image. The value\nmust be between 0 and 1. A value of 0 places the top edge of the radar background image on the top edge of the screen, 0.5\nplaces the top edge vertically in the middle of the screen.",
            "class": "ActionRange",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7427,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use container instead",
            "description": "Specifies the width of the radar background image, in percent of the portrait screen width.\nThe value must be between 0 and 1. A value of 0.1 sizes the radar background image in a way that\nthe width of the image makes up 10% of the entire screen width.<br/>\nThe aspect ratio of the radar background image will not be changed, the height of the radar will\nthus be automatically calculated.",
            "class": "ActionRange",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7645,
            "itemtype": "property",
            "name": "html",
            "type": "string",
            "description": "Plain HTML string that will be used to represent the drawable. If no &lt;body&gt; tag is supplied,\nit will automatically be added with default settings (transparent background, no margin).",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7660,
            "itemtype": "property",
            "name": "uri",
            "type": "string",
            "description": "A URI pointing to HTML content that will be used to render the drawable.",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7676,
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "string",
            "default": "#00000000 (transparent)",
            "description": "The background color of the HtmlDrawable in case the background of the HTML body is set to transparent. Can be passed as\n             hexadecimal RGB or RGBA values (see <a\n             href=\"http://en.wikipedia.org/wiki/RGBA\">here</a>\n             for details on RGBA colorcoding). In case RGB is\n             used, the alpha value is set to full opacity.<br/><br/>\n             The property is useful when the HtmlDrawable's content is set to a URI which assumes a white browser background, but sets its own background to transparent.\n             Setting the backgroundColor property to a non-transparent value causes transparent webpages to have a colored background.\n             <br/><br/>\n             <b>Remark</b>: The background of the HtmlDrawable itself does not change, the property only sets the background the HtmlDrawable is drawn on. If the body of the\n             content of the HtmlDrawable has a non-transparent background, changing the backgroundColor property has no effect.",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7699,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "description": "The width of the HTML drawable, in SDUs. Must be a positive number. Controls how wide the HtmlDrawable will be\n\t\t\t  rendered on the screen. The height of the HtmlDrawable will be automatically adjusted\n\t\t\t  keeping the aspect ratio of the Drawable.",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7717,
            "itemtype": "property",
            "name": "viewportWidth",
            "type": "Number",
            "description": "The width of the viewport the HTML texture will be rendered on, in pixels. A larger viewport\nmakes the items in the HTMLDrawable appear smaller. The default value is set to 256.\nThe viewport must be a positive integer, not exceeding 1024 pixels.",
            "default": "256",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7736,
            "itemtype": "property",
            "name": "viewportHeight",
            "type": "Number",
            "description": "The height of the viewport the HTML texture will be rendered on, in pixels. A larger viewport\nmakes the items in the HTMLDrawable appear smaller. The default value is set to 256.\nThe viewport must be a positive integer, not exceeding 1024 pixels.",
            "default": "256",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7755,
            "itemtype": "property",
            "name": "clickThroughEnabled",
            "type": "boolean",
            "description": "The property controls if clicks on HtmlDrawables will also be forwarded to the HTML content inside the HtmlDrawable.\nWhen a user clicks on a HtmlDrawable, the Drawable's onClick(arObject)-trigger will fire. If clickThroughEnabled is set to true,\nthe click will also be executed inside the HTML content, causing the onclick-function of the HTML element hit by the click to be\nexecuted.",
            "default": ": false",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7773,
            "itemtype": "property",
            "name": "allowDocumentLocationChanges",
            "type": "boolean",
            "description": "The property controls if changes to the document.location property of the HTML document wrapped inside the\nHtmlDrawable will actually be visible.<br/><br/>\nFor example, if a HtmlDrawable contains a link to http://www.wikitude.com, the user clicks on the link and the clickThroughEnabled\nproperty is active, the onDocumentLocationChanged trigger will fire. After that, two things can happen, depending on the\nallowDocumentLocationChanges setting:<br/><br/>\n\nIf allowDocumentLocationChanges is set to true, the content inside the HtmlDrawable will change to the content of http://www.wikitude.com<br/>\nIf allowDocumentLocationChanges is set to false, the content inside the HtmlDrawable will not change.",
            "default": ": false",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7795,
            "itemtype": "event",
            "name": "onDocumentLocationChanged",
            "description": "The trigger fires when the HtmlDrawable's document.location changes, for example because\na link was clicked inside the HtmlDrawable, which triggers a load of another document. The trigger will\nonly be fired when click through is allowed for the HtmlDrawable, see HtmlDrawable.clickThroughEnabled\nfor details.\n<br/><br/>\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onDocumentLocationChanged.",
            "params": [
                {
                    "name": "uri",
                    "description": "the URI the document.location property changes to.",
                    "type": "String"
                }
            ],
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7815,
            "itemtype": "event",
            "name": "onLoaded",
            "description": "The trigger fires when the HtmlDrawable's content was successfully loaded.<br/><br/>\nThe trigger will also fire when content was successfully reloaded because the URI or HTML changed.<br/><br/>\n<div class=\"paragraph\">Example:</div>\n\n<pre class=\"prettyprint\">\nhtmlDrawable = new AR.HtmlDrawable({\n&nbsp;&nbsp;uri:\"http://mydomain.com/my.html\"\n}, 1, { onLoaded : function(){\n&nbsp;&nbsp;uri:\"http://mydomain.com/my2.html\"\n};}); //trigger will fire again\n</pre>\n<br/><br/>\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onLoaded.",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7841,
            "itemtype": "event",
            "name": "onError",
            "description": "The trigger fires when the HtmlDrawable's content could not be loaded.\nCauses for this might include bad network connection or an invalid HTML.<br/><br/>\nThe trigger will also fire when content could not be reloaded after the URI or HTML changed.<br/><br/>\n             \nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom functionality\nby assigning a custom function to onError.",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7860,
            "itemtype": "method",
            "name": "evalJavaScript",
            "description": "Evaluates the passed javascript string in the context of the given HtmlDrawable.",
            "params": [
                {
                    "name": "js",
                    "description": "the javascript that should be evaluated. In case of an errornous script, the execution will fail gracefully.",
                    "type": "String"
                }
            ],
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7969,
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "description": "The URI pointing to the referenced target collection.\n             The property is read-only and can only be set on\n             creation.",
            "class": "Tracker",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 7982,
            "itemtype": "property",
            "name": "enabled",
            "type": "boolean",
            "description": "The current activity state of the Tracker. This property\n             might by changed automatically by the system, in case\n             another Tracker is enabled, causing this Tracker to be\n             disabled. The onDisabled trigger will be called in this\n             case.",
            "class": "Tracker",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8005,
            "itemtype": "event",
            "name": "onDisabled",
            "description": "The trigger fires when the Tracker has been disabled by\n             the system. It does not fire when enabled is set to\n             false manually.<br/><br/>\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom\nfunctionality by assigning a custom function to onDisabled.",
            "class": "Tracker",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8027,
            "itemtype": "event",
            "name": "onLoaded",
            "description": "The trigger fires when the Tracker's target collection\n             was successfully loaded. TrackableObjects related to\n             this Tracker can only be tracked after the Tracker was\n             successfully loaded.<br/><br/>\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom\nfunctionality by assigning a custom function to onLoaded.",
            "class": "Tracker",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8050,
            "itemtype": "event",
            "name": "onError",
            "description": "The trigger fires when the Tracker's target collection\n             could not be loaded. Causes for this might include bad\n             network connection or a corrupt target collection.<br/><br/>\n\nThe trigger is null by default, and will thus result in no action\nexecuted when the trigger fires. A developer can add custom\nfunctionality by assigning a custom function to onError.",
            "class": "Tracker",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8073,
            "itemtype": "method",
            "name": "isLoaded",
            "description": "Returns a boolean value indicating if the tracker has\n             already been successfully loaded.",
            "return": {
                "description": "true if the Tracker has successfully loaded, false if the Tracker has not been successfully loaded yet.",
                "type": "Boolean"
            },
            "class": "Tracker",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8207,
            "itemtype": "property",
            "name": "tracker",
            "type": "Tracker",
            "description": "The Tracker which contains the target referenced by this\n             Trackable2DObject. This property is read-only and can\n             only be set on creation.",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8220,
            "itemtype": "property",
            "name": "targetName",
            "type": "String",
            "description": "The name of the referenced target inside the target\n             collection. This defines on which target image the \n             Trackable2DObject will react. The value can be either\n             the actual name of the image or a wildcard to match several.\n             The following wildcards are supported: * and ? to be used \n             in the same manner as in a regular expression. \n             This property is read-only and can only be set on creation.",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8245,
            "itemtype": "property",
            "name": "aspectRatio",
            "type": "Number",
            "description": "The aspect ratio of the target, defined as width/height.\n             This property is read-only and will be generated after\n             the target was loaded. The property will be undefined if\n             the referenced Tracker was not yet loaded.",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8267,
            "itemtype": "method",
            "name": "getDistance",
            "deprecated": true,
            "deprecationMessage": "The functionality is not available anymore. When the function is\n            called, it will always return 0.",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8278,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use aspectRatio instead. Width behaves the same way as the\n            property aspectRatio.",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8292,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "deprecated": true,
            "deprecationMessage": "Use aspectRatio instead. The immutable property is undefined when\n            the Trackable2DObject was not yet loaded, and set to 1 otherwise.",
            "class": "Trackable2DObject",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8307,
            "itemtype": "property",
            "name": "updateRate",
            "deprecated": true,
            "type": "Number",
            "description": "Not used anymore, each HtmlDrawable has a high update rate. Property is always set to 1, changes to the property are ignored.",
            "class": "HtmlDrawable",
            "module": "AR"
        },
        {
            "file": "../build/core/android_ios/architect_src.js",
            "line": 8322,
            "itemtype": "property",
            "name": "UPDATE_RATE",
            "deprecated": true,
            "type": "Number",
            "description": "Not used anymore, since each HtmlDrawable automatically has its update rate set to HIGH. <br/><br/>\nThe following values are valid (use AR.HtmlDrawable.UPDATE_RATE for valid\nvalues):<br/> <table>\n<tr>\n<td><b>Value<b></td>\n<td><b>Description</b></td>\n</tr>\n<tr>\n<td>AR.HtmlDrawable.UPDATE_RATE.STATIC</td>\n<td>The HtmlDrawables will be rendered only once, and is never updated.\nUseful for static HTML content.</td>\n</tr>\n<tr>\n<td>AR.HtmlDrawable.UPDATE_RATE.LOW</td>\n<td>The HtmlDrawables will be updated in one second intervals as a maximum.</td>\n</tr>\n<tr>\n<td>AR.HtmlDrawable.UPDATE_RATE.MEDIUM</td>\n<td>The HtmlDrawables will be updated a few times a second. The exact update\nrate is dependent on the underlying device.</td>\n</tr>\n<tr>\n<td>AR.HtmlDrawable.UPDATE_RATE.HIGH</td>\n<td>The HtmlDrawables will be updated as often as possible, depending on the\ncurrent frame rate the mobile device is able to deliver. Useful for highly\ndynamic HTML content.</td>\n</tr>\n</table> <br/> <b>Remark:</b> As dynamic HtmlDrawables are memory consuming,\nlimit the number of dynamic HTMLDrawables as much as possible. If dynamic\nHtmlDrawables are required, try to limit those with HIGH and MEDIUM update\nrates, and use LOW update rates wherever possible to achieve good performance\nalso on low end devices.",
            "class": "HtmlDrawable",
            "module": "AR"
        }
    ],
    "warnings": []
}